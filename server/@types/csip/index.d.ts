/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/reference-data/{domain}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieve all reference data fo a domain.
     * @description Get all reference data for a domain e.g. area-of-work
     *
     *     Requires one of the following roles:
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__CHALLENGE_SUPPORT_INTERVENTION_PLAN_UI
     */
    get: operations['getReferenceData']
    put?: never
    /**
     * Add a reference data code.
     * @description Add a reference data code. Publishes prisoner-csip.reference-data-code-created event
     *
     *     Requires one of the following roles:
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__CHALLENGE_SUPPORT_INTERVENTION_PLAN_UI
     */
    post: operations['addReferenceDataCode']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/prisoners/{prisonNumber}/csip-records': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieve and filter all CSIP records for a prisoner.
     * @description Returns the CSIP records for a prisoner. Supports log code filtering.
     *
     *     Requires one of the following roles:
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__CHALLENGE_SUPPORT_INTERVENTION_PLAN_UI
     */
    get: operations['getCsipRecordsByPrisonNumber']
    put?: never
    /**
     * Create a CSIP record for a prisoner.
     * @description Create the CSIP record, referral and contributory factors. This starts the CSIP process. Publishes person.csip.record.created and person.csip.contributory-factor.created events
     *
     *     Requires one of the following roles:
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__CHALLENGE_SUPPORT_INTERVENTION_PLAN_UI
     *     * ROLE_NOMIS_CSIP
     */
    post: operations['createCsipRecord']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/csip-records/{recordUuid}/referral/safer-custody-screening': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Add safer custody screening outcome to the referral.
     * @description Create the safer custody screening outcome. Publishes person.csip.record.updated event with saferCustodyScreeningOutcomeAffected = true
     *
     *     Requires one of the following roles:
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__CHALLENGE_SUPPORT_INTERVENTION_PLAN_UI
     *     * ROLE_NOMIS_CSIP
     */
    post: operations['createScreeningOutcome']
    delete?: never
    options?: never
    head?: never
    /**
     * Update the safer custody screening outcome.
     * @description Update the safer custody screening outcome. Publishes person.csip.record.updated event with saferCustodyScreeningOutcomeAffected = true
     *
     *     Requires one of the following roles:
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__CHALLENGE_SUPPORT_INTERVENTION_PLAN_UI
     */
    patch: operations['updateScreeningOutcome']
    trace?: never
  }
  '/csip-records/{recordUuid}/referral/investigation': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Add investigation and any interviews to the referral.
     * @description Create the investigation and any interviews. Publishes person.csip.record.updated event with investigationAffected = true and person.csip.interview.created event
     *
     *     Requires one of the following roles:
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__CHALLENGE_SUPPORT_INTERVENTION_PLAN_UI
     *     * ROLE_NOMIS_CSIP
     */
    post: operations['createInvestigation']
    delete?: never
    options?: never
    head?: never
    /**
     * Update the investigation.
     * @description Update the investigation only. Cannot update interviews with this endpoint. Publishes person.csip.record.updated event with investigationAffected = true
     *
     *     Requires one of the following roles:
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__CHALLENGE_SUPPORT_INTERVENTION_PLAN_UI
     */
    patch: operations['updateInvestigation']
    trace?: never
  }
  '/csip-records/{recordUuid}/referral/investigation/interviews': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Add an interview to the investigation.
     * @description Add an interview to the investigation. Publishes person.csip.interview.created event
     *
     *     Requires one of the following roles:
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__CHALLENGE_SUPPORT_INTERVENTION_PLAN_UI
     */
    post: operations['createInterview']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/csip-records/{recordUuid}/referral/decision-and-actions': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Add decision and actions to the referral.
     * @description Create the decision and actions. Publishes person.csip.record.updated event with decisionAndActionsAffected = true
     *
     *     Requires one of the following roles:
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__CHALLENGE_SUPPORT_INTERVENTION_PLAN_UI
     *     * ROLE_NOMIS_CSIP
     */
    post: operations['createDecision']
    delete?: never
    options?: never
    head?: never
    /**
     * Update the decision and actions.
     * @description Update the decision and actions. Publishes person.csip.record.updated event with decisionAndActionsAffected = true
     *
     *     Requires one of the following roles:
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__CHALLENGE_SUPPORT_INTERVENTION_PLAN_UI
     */
    patch: operations['updateDecision']
    trace?: never
  }
  '/csip-records/{recordUuid}/referral/contributory-factors': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Add a contributory factor to the referral.
     * @description Add a contributory factor to the referral. Publishes person.csip.contributory-factor.created event
     *
     *     Requires one of the following roles:
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__CHALLENGE_SUPPORT_INTERVENTION_PLAN_UI
     */
    post: operations['createContributoryFactor']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/csip-records/{recordUuid}/plan': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Create the CSIP plan and identified needs.
     * @description Create the CSIP plan and identified needs. Publishes person.csip.record.updated event with planAffected = true and prisoner-csip.identified-need-created event
     *
     *     Requires one of the following roles:
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__CHALLENGE_SUPPORT_INTERVENTION_PLAN_UI
     */
    post: operations['createPlan']
    delete?: never
    options?: never
    head?: never
    /**
     * Update the CSIP plan.
     * @description Update the plan only. Cannot update identified needs with this endpoint. Publishes person.csip.record.updated event with planAffected = true
     *
     *     Requires one of the following roles:
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__CHALLENGE_SUPPORT_INTERVENTION_PLAN_UI
     */
    patch: operations['updatePlan']
    trace?: never
  }
  '/csip-records/{recordUuid}/plan/reviews': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Add a review of the plan and any attendees.
     * @description Create a review of the plan and any attendees. Publishes prisoner-csip.review-created and prisoner-csip.attendee-created events
     *
     *     Requires one of the following roles:
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__CHALLENGE_SUPPORT_INTERVENTION_PLAN_UI
     */
    post: operations['createReview']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/csip-records/{recordUuid}/plan/identified-needs': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Add an identified need to the plan.
     * @description Add an identified need to the plan. Publishes prisoner-csip.identified-need-created event
     *
     *     Requires one of the following roles:
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__CHALLENGE_SUPPORT_INTERVENTION_PLAN_UI
     */
    post: operations['createIdentifiedNeed']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/csip-records/plan/reviews/{reviewUuid}/attendees': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Add an attendee to a review of the plan.
     * @description Add an attendee to a review of the plan. Publishes prisoner-csip.attendee-created event
     *
     *     Requires one of the following roles:
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__CHALLENGE_SUPPORT_INTERVENTION_PLAN_UI
     */
    post: operations['createAttendee']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/reference-data/{domain}/{code}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    /**
     * Update a reference data code’s properties.
     * @description Update a reference data code’s properties. Publishes prisoner-csip.reference-data-code-updated event
     *
     *     Requires one of the following roles:
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__CHALLENGE_SUPPORT_INTERVENTION_PLAN_UI
     */
    patch: operations['updateReferenceDataCode']
    trace?: never
  }
  '/reference-data/{domain}/{code}/reactivate': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    /**
     * Reactivate a reference data code.
     * @description Reactivate a reference data code. Publishes prisoner-csip.reference-data-code-reactivated event
     *
     *     Requires one of the following roles:
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__CHALLENGE_SUPPORT_INTERVENTION_PLAN_UI
     */
    patch: operations['reactivateReferenceDataCode']
    trace?: never
  }
  '/reference-data/{domain}/{code}/deactivate': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    /**
     * Deactivate a reference data code.
     * @description Deactivate a reference data code. Publishes prisoner-csip.reference-data-code-deactivated event
     *
     *     Requires one of the following roles:
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__CHALLENGE_SUPPORT_INTERVENTION_PLAN_UI
     */
    patch: operations['deactivateReferenceDataCode']
    trace?: never
  }
  '/csip-records/{recordUuid}/referral': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    /**
     * Update the CSIP referral
     * @description Update the CSIP referral only. Cannot update contributory factors with this endpoint. Publishes person.csip.record.created event with referralAffected = true
     *
     *     Requires one of the following roles:
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__CHALLENGE_SUPPORT_INTERVENTION_PLAN_UI
     */
    patch: operations['updateReferral']
    trace?: never
  }
  '/csip-records/{recordUuid}/log-number': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    /**
     * Update the log code for a CSIP record.
     * @description Update the log code for a CSIP record. Publishes person.csip.record.updated event with recordAffected = true
     *
     *     Requires one of the following roles:
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__CHALLENGE_SUPPORT_INTERVENTION_PLAN_UI
     */
    patch: operations['updateCsipRecord']
    trace?: never
  }
  '/csip-records/referral/investigation/interviews/{interviewUuid}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post?: never
    /**
     * Remove an interview from the investigation.
     * @description Remove an interview from the investigation. Publishes prisoner-csip.interview-deleted event
     *
     *     Requires one of the following roles:
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__CHALLENGE_SUPPORT_INTERVENTION_PLAN_UI
     */
    delete: operations['deleteInterview']
    options?: never
    head?: never
    /**
     * Update an interview on the investigation.
     * @description Update an interview on the investigation. Publishes prisoner-csip.interview-updated event
     *
     *     Requires one of the following roles:
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__CHALLENGE_SUPPORT_INTERVENTION_PLAN_UI
     */
    patch: operations['updateInterview']
    trace?: never
  }
  '/csip-records/referral/contributory-factors/{contributoryFactorUuid}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post?: never
    /**
     * Remove a contributory factor on the referral.
     * @description Remove a contributory factor from the referral. Publishes prisoner-csip.contributory-factor-deleted event
     *
     *     Requires one of the following roles:
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__CHALLENGE_SUPPORT_INTERVENTION_PLAN_UI
     */
    delete: operations['deleteContributoryFactor']
    options?: never
    head?: never
    /**
     * Update a contributory factor on the referral.
     * @description Update a contributory factor on the referral. Publishes prisoner-csip.contributory-factor-updated event
     *
     *     Requires one of the following roles:
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__CHALLENGE_SUPPORT_INTERVENTION_PLAN_UI
     */
    patch: operations['updateContributoryFactor']
    trace?: never
  }
  '/csip-records/plan/reviews/{reviewUuid}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    /**
     * Update a review of the plan.
     * @description Update a review of the plan only. Cannot update attendees with this endpoint. Publishes prisoner-csip.review-updated event
     *
     *     Requires one of the following roles:
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__CHALLENGE_SUPPORT_INTERVENTION_PLAN_UI
     */
    patch: operations['updateReview']
    trace?: never
  }
  '/csip-records/plan/reviews/attendees/{attendeeUuid}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post?: never
    /**
     * Remove an attendee from a review of the plan.
     * @description Remove an attendee from a review of the plan. Publishes prisoner-csip.attendee-deleted event
     *
     *     Requires one of the following roles:
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__CHALLENGE_SUPPORT_INTERVENTION_PLAN_UI
     */
    delete: operations['deleteAttendee']
    options?: never
    head?: never
    /**
     * Update an attendee on a review of the plan.
     * @description Update an attendee on a review of the plan. Publishes prisoner-csip.attendee-updated event
     *
     *     Requires one of the following roles:
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__CHALLENGE_SUPPORT_INTERVENTION_PLAN_UI
     */
    patch: operations['updateAttendee']
    trace?: never
  }
  '/csip-records/plan/identified-needs/{identifiedNeedUuid}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post?: never
    /**
     * Remove an identified need from the plan.
     * @description Remove an identified need from the plan. Publishes prisoner-csip.identified-need-deleted event
     *
     *     Requires one of the following roles:
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__CHALLENGE_SUPPORT_INTERVENTION_PLAN_UI
     */
    delete: operations['deleteIdentifiedNeed']
    options?: never
    head?: never
    /**
     * Update an identified need on the plan.
     * @description Update an identified need on the plan. Publishes prisoner-csip.identified-need-updated event
     *
     *     Requires one of the following roles:
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__CHALLENGE_SUPPORT_INTERVENTION_PLAN_UI
     */
    patch: operations['updateIdentifiedNeed']
    trace?: never
  }
  '/prisons/{prisonCode}/csip-records': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieve and filter all CSIP records for prisoners resident in the prison.
     * @description Returns the CSIP records for prisoners resident in the prison. Supports log code filtering.
     *
     *     Requires one of the following roles:
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__CHALLENGE_SUPPORT_INTERVENTION_PLAN_UI
     */
    get: operations['getCsipRecordsByPrisonCode']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/csip-records/{recordUuid}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Get a CSIP record by its unique identifier
     * @description Returns the CSIP record with the matching identifier.
     *
     *     Requires one of the following roles:
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__CHALLENGE_SUPPORT_INTERVENTION_PLAN_UI
     *     * ROLE_NOMIS_CSIP
     */
    get: operations['retrieveCsipRecord']
    put?: never
    post?: never
    /**
     * Delete a complete CSIP record.
     * @description Delete the whole of a CSIP record, including its referral and plan. Publishes prisoner-csip.csip-record-deleted event
     *
     *     Requires one of the following roles:
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__CHALLENGE_SUPPORT_INTERVENTION_PLAN_UI
     */
    delete: operations['deleteCsipRecord']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
}
export type webhooks = Record<string, never>
export interface components {
  schemas: {
    /** @description The request body to create a new code to a reference data table */
    CreateReferenceDataRequest: {
      /** @description The short code for a reference data */
      code: string
      /** @description The description for the reference data code */
      description?: string
    }
    ErrorResponse: {
      /** Format: int32 */
      status: number
      errorCode?: string
      userMessage?: string
      developerMessage?: string
      moreInfo?: string
    }
    /** @description A reference data code to categorise various aspects related to a CSIP record */
    ReferenceData: {
      /** @description The short code of a reference data */
      code: string
      /** @description The description of the reference data code */
      description?: string
      /**
       * Format: int32
       * @description The sequence number of the code. Used for ordering codes correctly in lists and drop downs.
       * @example 3
       */
      listSequence?: number
      /**
       * Format: date-time
       * @description The date and time the code was created
       */
      createdAt: string
      /**
       * @description The username of the user who created the code
       * @example USER1234
       */
      createdBy: string
      /**
       * Format: date-time
       * @description The date and time the code was last modified
       */
      lastModifiedAt?: string
      /**
       * @description The username of the user who last modified the code
       * @example USER1234
       */
      lastModifiedBy?: string
      /**
       * Format: date-time
       * @description The date and time the code was deactivated
       */
      deactivatedAt?: string
      /**
       * @description The username of the user who deactivated the code
       * @example USER1234
       */
      deactivatedBy?: string
    }
    /** @description The request body to create a contributory factor to the incident that motivated the CSIP referral */
    CreateContributoryFactorRequest: {
      /** @description The type of contributory factor to the incident or motivation for CSIP referral. */
      factorTypeCode: string
      /** @description Additional information about the contributory factor to the incident or motivation for CSIP referral. */
      comment?: string
    }
    /** @description The request body for creating a new CSIP Record for a person */
    CreateCsipRecordRequest: {
      /** @description User entered identifier for the CSIP record. Defaults to the prison code. */
      logCode?: string
      referral: components['schemas']['CreateReferralRequest']
    }
    /** @description The request body for creating a CSIP referral */
    CreateReferralRequest: {
      /**
       * Format: date
       * @description The date the incident that motivated the CSIP referral occurred
       * @example 2021-09-27
       */
      incidentDate: string
      /**
       * @description The time the incident that motivated the CSIP referral occurred
       * @example 14:19:25
       */
      incidentTime?: string
      /** @description The type of incident that motivated the CSIP referral. */
      incidentTypeCode: string
      /** @description The location of incident that motivated the CSIP referral. */
      incidentLocationCode: string
      /** @description The person reporting the incident or creating the CSIP referral. */
      referredBy: string
      /** @description The area of work of the person reporting the incident or creating the CSIP referral. */
      refererAreaCode: string
      /** @description Was this referral proactive or preventative. */
      isProactiveReferral?: boolean
      /** @description Were any members of staff assaulted in the incident. */
      isStaffAssaulted?: boolean
      /** @description Name or names of assaulted members of staff if any. */
      assaultedStaffName?: string
      /** @description The type of involvement the person had in the incident */
      incidentInvolvementCode?: string
      /** @description The reasons why there is cause for concern. */
      descriptionOfConcern?: string
      /** @description The reasons already known about the causes of the incident or motivation for CSIP referral. */
      knownReasons?: string
      /** @description Any other information about the incident or reasons for CSIP referral. */
      otherInformation?: string
      /**
       * @description Records whether the safer custody team been informed.
       * @enum {string}
       */
      isSaferCustodyTeamInformed: 'YES' | 'NO' | 'DO_NOT_KNOW'
      /** @description Is the referral complete. */
      isReferralComplete?: boolean
      /** @description Contributory factors to the incident that motivated the referral. */
      contributoryFactors: components['schemas']['CreateContributoryFactorRequest'][]
    }
    /** @description An Attendee or Contributor to a Review of a CSIP Plan */
    Attendee: {
      /**
       * Format: uuid
       * @description The unique identifier assigned to the Attendee
       * @example 8cdadcf3-b003-4116-9956-c99bd8df6a00
       */
      attendeeUuid: string
      /** @description Name of review attendee/contributor. */
      name?: string
      /** @description Role of review attendee/contributor. */
      role?: string
      /** @description If the person attended the review. */
      isAttended?: boolean
      /** @description Description of attendee contribution. */
      contribution?: string
      /**
       * Format: date-time
       * @description The date and time the Attendee was created
       */
      createdAt: string
      /**
       * @description The username of the user who created the Attendee
       * @example USER1234
       */
      createdBy: string
      /**
       * @description The displayable name of the user who created the Attendee
       * @example Firstname Lastname
       */
      createdByDisplayName: string
      /**
       * Format: date-time
       * @description The date and time the Attendee was last modified
       */
      lastModifiedAt?: string
      /**
       * @description The username of the user who last modified the Attendee
       * @example USER1234
       */
      lastModifiedBy?: string
      /**
       * @description The displayable name of the user who last modified the Attendee
       * @example Firstname Lastname
       */
      lastModifiedByDisplayName?: string
    }
    /** @description The contributory factor to the incident that motivated the CSIP referral */
    ContributoryFactor: {
      /**
       * Format: uuid
       * @description The unique identifier assigned to the Contributory Factor
       * @example 8cdadcf3-b003-4116-9956-c99bd8df6a00
       */
      factorUuid: string
      factorType: components['schemas']['ReferenceData']
      /** @description Additional information about the contributory factor to the incident or motivation for CSIP referral. */
      comment?: string
      /**
       * Format: date-time
       * @description The date and time the Contributory Factor was created
       */
      createdAt: string
      /**
       * @description The username of the user who created the Contributory Factor
       * @example USER1234
       */
      createdBy: string
      /**
       * @description The displayable name of the user who created the Contributory Factor
       * @example Firstname Lastname
       */
      createdByDisplayName: string
      /**
       * Format: date-time
       * @description The date and time the Contributory Factor was last modified
       */
      lastModifiedAt?: string
      /**
       * @description The username of the user who last modified the Contributory Factor
       * @example USER1234
       */
      lastModifiedBy?: string
      /**
       * @description The displayable name of the user who last modified the Contributory Factor
       * @example Firstname Lastname
       */
      lastModifiedByDisplayName?: string
    }
    /** @description A CSIP Record associated with a person */
    CsipRecord: {
      /**
       * Format: uuid
       * @description The unique identifier assigned to the CSIP Record
       * @example 8cdadcf3-b003-4116-9956-c99bd8df6a00
       */
      recordUuid: string
      /** @description The prison number of the person the CSIP record is for. */
      prisonNumber: string
      /** @description The prison code where the person was resident at the time the CSIP record was created. */
      prisonCodeWhenRecorded?: string
      /** @description User entered identifier for the CSIP record. Defaults to the prison code. */
      logCode?: string
      /**
       * Format: date-time
       * @description The date and time the CSIP Record was created
       */
      createdAt: string
      /**
       * @description The username of the user who created the CSIP Record
       * @example USER1234
       */
      createdBy: string
      /**
       * @description The displayable name of the user who created the CSIP Record
       * @example Firstname Lastname
       */
      createdByDisplayName: string
      /**
       * Format: date-time
       * @description The date and time the CSIP Record was last modified
       */
      lastModifiedAt?: string
      /**
       * @description The username of the user who last modified the CSIP Record
       * @example USER1234
       */
      lastModifiedBy?: string
      /**
       * @description The displayable name of the user who last modified the CSIP Record
       * @example Firstname Lastname
       */
      lastModifiedByDisplayName?: string
      referral: components['schemas']['Referral']
      plan?: components['schemas']['Plan']
    }
    /** @description The Decision and Actions for the CSIP referral */
    DecisionAndActions: {
      /** @description The conclusion of the referral and reasons for the outcome decision. */
      conclusion?: string
      outcome: components['schemas']['ReferenceData']
      outcomeSignedOffByRole?: components['schemas']['ReferenceData']
      /** @description The username of the user who recorded the outcome decision. */
      outcomeRecordedBy?: string
      /** @description The displayable name of the user who recorded the outcome decision. */
      outcomeRecordedByDisplayName?: string
      /**
       * Format: date
       * @description The date the outcome decision was made.
       * @example 2021-09-27
       */
      outcomeDate?: string
      /** @description The next steps that should be taken following the outcome decision. */
      nextSteps?: string
      /** @description If a recommended action is to open a CSIP alert. */
      isActionOpenCsipAlert: boolean
      /** @description If a recommended action is to update the non associations for the person. */
      isActionNonAssociationsUpdated: boolean
      /** @description If a recommended action is to add the person to the observation book. */
      isActionObservationBook: boolean
      /** @description If a recommended action is to move the person. */
      isActionUnitOrCellMove: boolean
      /** @description If a recommended action is to perform a CSRA/RSRA review. */
      isActionCsraOrRsraReview: boolean
      /** @description If a recommended action is to refer the person to another service. */
      isActionServiceReferral: boolean
      /** @description If a recommended action is to refer the person to SIM. */
      isActionSimReferral: boolean
      /** @description Any other actions that are recommended to be considered. */
      actionOther?: string
    }
    /** @description A need identified in the CSIP Plan */
    IdentifiedNeed: {
      /**
       * Format: uuid
       * @description The unique identifier assigned to the Contributory Factor
       * @example 8cdadcf3-b003-4116-9956-c99bd8df6a00
       */
      identifiedNeedUuid: string
      /** @description Details of the need identified in the CSIP plan. */
      identifiedNeed: string
      /** @description The name of the person who identified the need. */
      needIdentifiedBy: string
      /**
       * Format: date
       * @description The date the need was identified.
       * @example 2021-09-27
       */
      createdDate: string
      /**
       * Format: date
       * @description The target date the need should be progressed or resolved.
       * @example 2021-09-27
       */
      targetDate: string
      /**
       * Format: date
       * @description The date the identified need was resolved or closed.
       * @example 2021-09-27
       */
      closedDate?: string
      /** @description The planned intervention for the identified need. */
      intervention: string
      /** @description How the plan to address the identified need is progressing. */
      progression?: string
      /**
       * Format: date-time
       * @description The date and time the Identified Need was created
       */
      createdAt: string
      /**
       * @description The username of the user who created the Identified Need
       * @example USER1234
       */
      createdBy: string
      /**
       * @description The displayable name of the user who created the Identified Need
       * @example Firstname Lastname
       */
      createdByDisplayName: string
      /**
       * Format: date-time
       * @description The date and time the Identified Need was last modified
       */
      lastModifiedAt?: string
      /**
       * @description The username of the user who last modified the Identified Need
       * @example USER1234
       */
      lastModifiedBy?: string
      /**
       * @description The displayable name of the user who last modified the Identified Need
       * @example Firstname Lastname
       */
      lastModifiedByDisplayName?: string
    }
    /** @description An interview in relation to the investigation on the incident that motivated the CSIP referral */
    Interview: {
      /**
       * Format: uuid
       * @description The unique identifier assigned to the Interview
       * @example 8cdadcf3-b003-4116-9956-c99bd8df6a00
       */
      interviewUuid: string
      /** @description Name of the person being interviewed. */
      interviewee: string
      /**
       * Format: date
       * @description The date the interview took place.
       * @example 2021-09-27
       */
      interviewDate: string
      intervieweeRole: components['schemas']['ReferenceData']
      /** @description Information provided in interview. */
      interviewText?: string
      /**
       * Format: date-time
       * @description The date and time the Interview was created
       */
      createdAt: string
      /**
       * @description The username of the user who created the Interview
       * @example USER1234
       */
      createdBy: string
      /**
       * @description The displayable name of the user who created the Interview
       * @example Firstname Lastname
       */
      createdByDisplayName: string
      /**
       * Format: date-time
       * @description The date and time the Interview was last modified
       */
      lastModifiedAt?: string
      /**
       * @description The username of the user who last modified the Interview
       * @example USER1234
       */
      lastModifiedBy?: string
      /**
       * @description The displayable name of the user who last modified the Interview
       * @example Firstname Lastname
       */
      lastModifiedByDisplayName?: string
    }
    /** @description The investigation on the incident that motivated the CSIP referral */
    Investigation: {
      /** @description The names of the staff involved in the investigation. */
      staffInvolved?: string
      /** @description Any evidence that was secured as part of the investigation. */
      evidenceSecured?: string
      /** @description The reasons why the incident occurred. */
      occurrenceReason?: string
      /** @description The normal behaviour of the person in prison. */
      personsUsualBehaviour?: string
      /** @description What triggers the person in prison has that could have motivated the incident. */
      personsTrigger?: string
      /** @description Any protective factors to reduce the person's risk factors and prevent triggers for instance of violence */
      protectiveFactors?: string
      /** @description The interviews in relation to the Investigation */
      interviews: components['schemas']['Interview'][]
    }
    /** @description The CSIP Plan of a CSIP record */
    Plan: {
      /** @description The case manager assigned to the CSIP plan. */
      caseManager: string
      /** @description The reasons motivating the creation of a CSIP plan. */
      reasonForPlan: string
      /**
       * Format: date
       * @description The first date the CSIP plan should be reviewed.
       * @example 2021-09-27
       */
      firstCaseReviewDate: string
      /** @description The needs identified in the CSIP plan. */
      identifiedNeeds: components['schemas']['IdentifiedNeed'][]
      /** @description Regular reviews of the CSIP Plan */
      reviews: components['schemas']['Review'][]
    }
    /** @description The referral of a CSIP record */
    Referral: {
      /**
       * Format: date
       * @description The date the incident that motivated the CSIP referral occurred
       * @example 2021-09-27
       */
      incidentDate: string
      /**
       * @description The time the incident that motivated the CSIP referral occurred
       * @example 14:19:25
       */
      incidentTime?: string
      incidentType: components['schemas']['ReferenceData']
      incidentLocation: components['schemas']['ReferenceData']
      /** @description The person reporting the incident or creating the CSIP referral. */
      referredBy: string
      refererArea: components['schemas']['ReferenceData']
      /** @description Was this referral proactive or preventative. */
      isProactiveReferral?: boolean
      /** @description Were any members of staff assaulted in the incident. */
      isStaffAssaulted?: boolean
      /** @description Name or names of assaulted members of staff if any. */
      assaultedStaffName?: string
      /**
       * Format: date
       * @description The release date of the person in prison. Can be planned released date or the date they were released.
       */
      releaseDate?: string
      incidentInvolvement?: components['schemas']['ReferenceData']
      /** @description The reasons why there is cause for concern. */
      descriptionOfConcern?: string
      /** @description The reasons already known about the causes of the incident or motivation for CSIP referral. */
      knownReasons?: string
      /** @description Any other information about the incident or reasons for CSIP referral. */
      otherInformation?: string
      /**
       * @description Records whether the safer custody team been informed.
       * @enum {string}
       */
      isSaferCustodyTeamInformed: 'YES' | 'NO' | 'DO_NOT_KNOW'
      /** @description Is the referral complete. */
      isReferralComplete?: boolean
      /** @description Contributory factors to the incident that motivated the referral. */
      contributoryFactors: components['schemas']['ContributoryFactor'][]
      investigation?: components['schemas']['Investigation']
      saferCustodyScreeningOutcome?: components['schemas']['SaferCustodyScreeningOutcome']
      decisionAndActions?: components['schemas']['DecisionAndActions']
    }
    /** @description A regular review of a CSIP Plan */
    Review: {
      /**
       * Format: uuid
       * @description The unique identifier assigned to the Review
       * @example 8cdadcf3-b003-4116-9956-c99bd8df6a00
       */
      reviewUuid: string
      /**
       * Format: int32
       * @description The sequence number of the Review. Used for ordering reviews correctly in lists and/or drop downs.
       * @example 3
       */
      reviewSequence: number
      /**
       * Format: date
       * @description The date of the review.
       * @example 2021-09-27
       */
      reviewDate?: string
      /** @description The username of the person who recorded the review. */
      recordedBy: string
      /** @description The displayable name of the person who recorded the review. */
      recordedByDisplayName: string
      /**
       * Format: date
       * @description The date of the next review.
       * @example 2021-09-27
       */
      nextReviewDate?: string
      /** @description If an action following the review was to inform people responsible for the person in prison. */
      isActionResponsiblePeopleInformed?: boolean
      /** @description If an action following the review was to update the CSIP plan. */
      isActionCsipUpdated?: boolean
      /** @description If the outcome decision following the review was the person should remain on the CSIP plan. */
      isActionRemainOnCsip?: boolean
      /** @description If an action following the review was to add a CSIP case note. */
      isActionCaseNote?: boolean
      /** @description If the outcome decision following the review was closing the CSIP plan. */
      isActionCloseCsip?: boolean
      /**
       * Format: date
       * @description The date the CSIP plan was closed following a review outcome decision to close it.
       * @example 2021-09-27
       */
      csipClosedDate?: string
      /** @description Additional information about the review. */
      summary?: string
      /**
       * Format: date-time
       * @description The date and time the Review was created
       */
      createdAt: string
      /**
       * @description The username of the user who created the Review
       * @example USER1234
       */
      createdBy: string
      /**
       * @description The displayable name of the user who created the Review
       * @example Firstname Lastname
       */
      createdByDisplayName: string
      /**
       * Format: date-time
       * @description The date and time the Review was last modified
       */
      lastModifiedAt?: string
      /**
       * @description The username of the user who last modified the Review
       * @example USER1234
       */
      lastModifiedBy?: string
      /**
       * @description The displayable name of the user who last modified the Review
       * @example Firstname Lastname
       */
      lastModifiedByDisplayName?: string
      /** @description The attendees/contributors to the review. */
      attendees: components['schemas']['Attendee'][]
    }
    /** @description The Safer Custody Screening Outcome to the CSIP referral */
    SaferCustodyScreeningOutcome: {
      outcome: components['schemas']['ReferenceData']
      /** @description The username of the user who recorded the safer custody screening outcome. */
      recordedBy: string
      /** @description The displayable name of the user who recorded the safer custody screening outcome. */
      recordedByDisplayName: string
      /**
       * Format: date
       * @description The date of the safer custody screening outcome.
       * @example 2021-09-27
       */
      date: string
      /** @description The reasons for the safer custody screening outcome decision. */
      reasonForDecision: string
    }
    /** @description The request body to create the Safer Custody Screening Outcome to the CSIP referral */
    CreateSaferCustodyScreeningOutcomeRequest: {
      /** @description The type of outcome of the safer custody screening. */
      outcomeTypeCode: string
      /**
       * Format: date
       * @description The date of the safer custody screening outcome.
       * @example 2021-09-27
       */
      date: string
      /** @description The reasons for the safer custody screening outcome decision. */
      reasonForDecision: string
    }
    /** @description The request body to create an interview */
    CreateInterviewRequest: {
      /** @description Name of the person being interviewed. */
      interviewee: string
      /**
       * Format: date
       * @description The date the interview took place.
       * @example 2021-09-27
       */
      interviewDate: string
      /** @description What role the interviewee played in the incident or referral. */
      intervieweeRoleCode: string
      /** @description Information provided in interview. */
      interviewText?: string
    }
    /** @description The request body to create an investigation on the incident that motivated the CSIP referral. */
    CreateInvestigationRequest: {
      /** @description The names of the staff involved in the investigation. */
      staffInvolved?: string
      /** @description Any evidence that was secured as part of the investigation. */
      evidenceSecured?: string
      /** @description The reasons why the incident occurred. */
      occurrenceReason?: string
      /** @description The normal behaviour of the person in prison. */
      personsUsualBehaviour?: string
      /** @description What triggers the person in prison has that could have motivated the incident. */
      personsTrigger?: string
      /** @description Any protective factors to reduce the person's risk factors and prevent triggers for instance of violence */
      protectiveFactors?: string
      /** @description The interviews in relation to the investigation */
      interviews?: components['schemas']['CreateInterviewRequest'][]
    }
    /** @description The request body to create a Decision and Actions for a CSIP referral */
    CreateDecisionAndActionsRequest: {
      /** @description The conclusion of the referral and reasons for the outcome decision. */
      conclusion?: string
      /** @description The outcome decision for the referral. */
      outcomeTypeCode: string
      /** @description The role of the person making the outcome decision. */
      outcomeSignedOffByRoleCode?: string
      /** @description The username of the user who recorded the outcome decision. */
      outcomeRecordedBy?: string
      /** @description The displayable name of the user who recorded the outcome decision. */
      outcomeRecordedByDisplayName?: string
      /**
       * Format: date
       * @description The date the outcome decision was made.
       * @example 2021-09-27
       */
      outcomeDate?: string
      /** @description The next steps that should be taken following the outcome decision. */
      nextSteps?: string
      /** @description If a recommended action is to open a CSIP alert. */
      isActionOpenCsipAlert: boolean
      /** @description If a recommended action is to update the non associations for the person. */
      isActionNonAssociationsUpdated: boolean
      /** @description If a recommended action is to add the person to the observation book. */
      isActionObservationBook: boolean
      /** @description If a recommended action is to move the person. */
      isActionUnitOrCellMove: boolean
      /** @description If a recommended action is to perform a CSRA/RSRA review. */
      isActionCsraOrRsraReview: boolean
      /** @description If a recommended action is to refer the person to another service. */
      isActionServiceReferral: boolean
      /** @description If a recommended action is to refer the person to SIM. */
      isActionSimReferral: boolean
      /** @description Any other actions that are recommended to be considered. */
      actionOther?: string
    }
    /** @description The request body to create an Identified Need in a CSIP Plan */
    CreateIdentifiedNeedRequest: {
      /** @description Details of the need identified in the CSIP plan. */
      identifiedNeed: string
      /** @description The name of the person who identified the need. */
      needIdentifiedBy: string
      /**
       * Format: date
       * @description The date the need was identified.
       * @example 2021-09-27
       */
      createdDate: string
      /**
       * Format: date
       * @description The target date the need should be progressed or resolved.
       * @example 2021-09-27
       */
      targetDate: string
      /**
       * Format: date
       * @description The date the identified need was resolved or closed.
       * @example 2021-09-27
       */
      closedDate?: string
      /** @description The planned intervention for the identified need. */
      intervention: string
      /** @description How the plan to address the identified need is progressing. */
      progression?: string
    }
    /** @description The request for creating a CSIP Plan for a CSIP record */
    CreatePlanRequest: {
      /** @description The case manager assigned to the CSIP plan. */
      caseManager: string
      /** @description The reasons motivating the creation of a CSIP plan. */
      reasonForPlan: string
      /**
       * Format: date
       * @description The first date the CSIP plan should be reviewed.
       * @example 2021-09-27
       */
      firstCaseReviewDate: string
      /** @description The needs identified in the CSIP plan. */
      identifiedNeeds: components['schemas']['CreateIdentifiedNeedRequest'][]
    }
    /** @description The request body to create a Attendee/Contributor to the review of a CSIP Plan */
    CreateAttendeeRequest: {
      /** @description Name of review attendee/contributor. */
      name?: string
      /** @description Role of review attendee/contributor. */
      role?: string
      /** @description If the person attended the review. */
      isAttended?: boolean
      /** @description Description of attendee contribution. */
      contribution?: string
    }
    /** @description The request body to create a Review for a CSIP Plan */
    CreateReviewRequest: {
      /**
       * Format: date
       * @description The date of the review.
       * @example 2021-09-27
       */
      reviewDate?: string
      /** @description The username of the person who recorded the review. */
      recordedBy: string
      /** @description The displayable name of the person who recorded the review. */
      recordedByDisplayName: string
      /**
       * Format: date
       * @description The date of the next review.
       * @example 2021-09-27
       */
      nextReviewDate?: string
      /** @description If an action following the review was to inform people responsible for the person in prison. */
      isActionResponsiblePeopleInformed?: boolean
      /** @description If an action following the review was to update the CSIP plan. */
      isActionCsipUpdated?: boolean
      /** @description If the outcome decision following the review was the person should remain on the CSIP plan. */
      isActionRemainOnCsip?: boolean
      /** @description If an action following the review was to add a CSIP case note. */
      isActionCaseNote?: boolean
      /** @description If the outcome decision following the review was closing the CSIP plan. */
      isActionCloseCsip?: boolean
      /**
       * Format: date
       * @description The date the CSIP plan was closed following a review outcome decision to close it.
       * @example 2021-09-27
       */
      csipClosedDate?: string
      /** @description Additional information about the review. */
      summary?: string
      /** @description The attendees/contributors to the review. */
      attendees?: components['schemas']['CreateAttendeeRequest'][]
    }
    /** @description The request body to update the description of a code in a reference data table */
    UpdateReferenceDataRequest: {
      /** @description The description for the reference data code */
      description?: string
    }
    /** @description The request body for updating a CSIP referral */
    UpdateReferralRequest: {
      /**
       * Format: date
       * @description The date the incident that motivated the CSIP referral occurred
       * @example 2021-09-27
       */
      incidentDate: string
      /**
       * @description The time the incident that motivated the CSIP referral occurred
       * @example 14:19:25
       */
      incidentTime?: string
      /** @description The type of incident that motivated the CSIP referral. */
      incidentTypeCode: string
      /** @description The location of incident that motivated the CSIP referral. */
      incidentLocationCode: string
      /** @description The person reporting the incident or creating the CSIP referral. */
      referredBy: string
      /** @description The area of work of the person reporting the incident or creating the CSIP referral. */
      refererAreaCode: string
      /** @description Was this referral proactive or preventative. */
      isProactiveReferral?: boolean
      /** @description Were any members of staff assaulted in the incident. */
      isStaffAssaulted?: boolean
      /** @description Name or names of assaulted members of staff if any. */
      assaultedStaffName?: string
      /** @description The type of involvement the person had in the incident */
      incidentInvolvementCode?: string
      /** @description The reasons why there is cause for concern. */
      descriptionOfConcern?: string
      /** @description The reasons already known about the causes of the incident or motivation for CSIP referral. */
      knownReasons?: string
      /** @description Any other information about the incident or reasons for CSIP referral. */
      otherInformation?: string
      /**
       * @description Records whether the safer custody team been informed.
       * @enum {string}
       */
      isSaferCustodyTeamInformed: 'YES' | 'NO' | 'DO_NOT_KNOW'
      /** @description Is the referral complete. */
      isReferralComplete?: boolean
    }
    /** @description The request body to update the Safer Custody Screening Outcome to the CSIP referral */
    UpdateSaferCustodyScreeningOutcomeRequest: {
      /** @description The type of outcome of the safer custody screening. */
      outcomeTypeCode: string
      /**
       * Format: date
       * @description The date of the safer custody screening outcome.
       * @example 2021-09-27
       */
      date: string
      /** @description The reasons for the safer custody screening outcome decision. */
      reasonForDecision: string
    }
    /** @description The request body to update an investigation on the incident that motivated the CSIP referral. */
    UpdateInvestigationRequest: {
      /** @description The names of the staff involved in the investigation. */
      staffInvolved?: string
      /** @description Any evidence that was secured as part of the investigation. */
      evidenceSecured?: string
      /** @description The reasons why the incident occurred. */
      occurrenceReason?: string
      /** @description The normal behaviour of the person in prison. */
      personsUsualBehaviour?: string
      /** @description What triggers the person in prison has that could have motivated the incident. */
      personsTrigger?: string
      /** @description Any protective factors to reduce the person's risk factors and prevent triggers for instance of violence */
      protectiveFactors?: string
    }
    /** @description The request body to update a Decision and Actions for a CSIP referral */
    UpdateDecisionAndActionsRequest: {
      /** @description The conclusion of the referral and reasons for the outcome decision. */
      conclusion?: string
      /** @description The outcome decision for the referral. */
      outcomeTypeCode: string
      /** @description The role of the person making the outcome decision. */
      outcomeSignedOffByRoleCode?: string
      /** @description The username of the user who recorded the outcome decision. */
      outcomeRecordedBy?: string
      /** @description The displayable name of the user who recorded the outcome decision. */
      outcomeRecordedByDisplayName?: string
      /**
       * Format: date
       * @description The date the outcome decision was made.
       * @example 2021-09-27
       */
      outcomeDate?: string
      /** @description The next steps that should be taken following the outcome decision. */
      nextSteps?: string
      /** @description If a recommended action is to open a CSIP alert. */
      isActionOpenCsipAlert?: boolean
      /** @description If a recommended action is to update the non associations for the person. */
      isActionNonAssociationsUpdated?: boolean
      /** @description If a recommended action is to add the person to the observation book. */
      isActionObservationBook?: boolean
      /** @description If a recommended action is to move the person. */
      isActionUnitOrCellMove?: boolean
      /** @description If a recommended action is to perform a CSRA/RSRA review. */
      isActionCsraOrRsraReview?: boolean
      /** @description If a recommended action is to refer the person to another service. */
      isActionServiceReferral?: boolean
      /** @description If a recommended action is to refer the person to SIM. */
      isActionSimReferral?: boolean
      /** @description Any other actions that are recommended to be considered. */
      actionOther?: string
    }
    /** @description The request for updating a CSIP Plan for a CSIP record */
    UpdatePlanRequest: {
      /** @description The case manager assigned to the CSIP plan. */
      caseManager: string
      /** @description The reasons motivating the creation of a CSIP plan. */
      reasonForPlan: string
      /**
       * Format: date
       * @description The first date the CSIP plan should be reviewed.
       * @example 2021-09-27
       */
      firstCaseReviewDate: string
    }
    /** @description The request body for updating a CSIP Record */
    UpdateCsipRecordRequest: {
      /** @description User entered identifier for the CSIP record. Defaults to the prison code. */
      logCode?: string
    }
    /** @description The request body to update an interview */
    UpdateInterviewRequest: {
      /** @description Name of the person being interviewed. */
      interviewee: string
      /**
       * Format: date
       * @description The date the interview took place.
       * @example 2021-09-27
       */
      interviewDate: string
      /** @description What role the interviewee played in the incident or referral. */
      intervieweeRoleCode: string
      /** @description Information provided in interview. */
      interviewText?: string
    }
    /** @description The request body to update a contributory factor to the incident that motivated the CSIP referral */
    UpdateContributoryFactorRequest: {
      /** @description The type of contributory factor to the incident or motivation for CSIP referral. */
      factorTypeCode: string
      /** @description Additional information about the contributory factor to the incident or motivation for CSIP referral. */
      comment?: string
    }
    /** @description The request body to update a Review for a CSIP Plan */
    UpdateReviewRequest: {
      /**
       * Format: date
       * @description The date of the review.
       * @example 2021-09-27
       */
      reviewDate?: string
      /** @description The username of the person who recorded the review. */
      recordedBy: string
      /** @description The displayable name of the person who recorded the review. */
      recordedByDisplayName: string
      /**
       * Format: date
       * @description The date of the next review.
       * @example 2021-09-27
       */
      nextReviewDate?: string
      /** @description If an action following the review was to inform people responsible for the person in prison. */
      isActionResponsiblePeopleInformed?: boolean
      /** @description If an action following the review was to update the CSIP plan. */
      isActionCsipUpdated?: boolean
      /** @description If the outcome decision following the review was the person should remain on the CSIP plan. */
      isActionRemainOnCsip?: boolean
      /** @description If an action following the review was to add a CSIP case note. */
      isActionCaseNote?: boolean
      /** @description If the outcome decision following the review was closing the CSIP plan. */
      isActionCloseCsip?: boolean
      /**
       * Format: date
       * @description The date the CSIP plan was closed following a review outcome decision to close it.
       * @example 2021-09-27
       */
      csipClosedDate?: string
      /** @description Additional information about the review. */
      summary?: string
    }
    /** @description The request body to update a Attendee/Contributor to the review of a CSIP Plan */
    UpdateAttendeeRequest: {
      /** @description Name of review attendee/contributor. */
      name?: string
      /** @description Role of review attendee/contributor. */
      role?: string
      /** @description If the person attended the review. */
      isAttended?: boolean
      /** @description Description of attendee contribution. */
      contribution?: string
    }
    /** @description The request body to update an Identified Need in a CSIP Plan */
    UpdateIdentifiedNeedRequest: {
      /** @description Details of the need identified in the CSIP plan. */
      identifiedNeed: string
      /** @description The name of the person who identified the need. */
      needIdentifiedBy: string
      /**
       * Format: date
       * @description The date the need was identified.
       * @example 2021-09-27
       */
      createdDate: string
      /**
       * Format: date
       * @description The target date the need should be progressed or resolved.
       * @example 2021-09-27
       */
      targetDate: string
      /**
       * Format: date
       * @description The date the identified need was resolved or closed.
       * @example 2021-09-27
       */
      closedDate?: string
      /** @description The planned intervention for the identified need. */
      intervention: string
      /** @description How the plan to address the identified need is progressing. */
      progression?: string
    }
    PageCsipRecord: {
      /** Format: int64 */
      totalElements?: number
      /** Format: int32 */
      totalPages?: number
      /** Format: int32 */
      size?: number
      content?: components['schemas']['CsipRecord'][]
      /** Format: int32 */
      number?: number
      sort?: components['schemas']['SortObject'][]
      first?: boolean
      last?: boolean
      /** Format: int32 */
      numberOfElements?: number
      pageable?: components['schemas']['PageableObject']
      empty?: boolean
    }
    PageableObject: {
      /** Format: int64 */
      offset?: number
      sort?: components['schemas']['SortObject'][]
      /** Format: int32 */
      pageSize?: number
      paged?: boolean
      /** Format: int32 */
      pageNumber?: number
      unpaged?: boolean
    }
    SortObject: {
      direction?: string
      nullHandling?: string
      ascending?: boolean
      property?: string
      ignoreCase?: boolean
    }
  }
  responses: never
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}
export type $defs = Record<string, never>
export interface operations {
  getReferenceData: {
    parameters: {
      query?: {
        /** @description Include inactive reference data. Defaults to false */
        includeInactive?: boolean
      }
      header?: never
      path: {
        /** @description Reference data domain. */
        domain:
          | 'area-of-work'
          | 'contributory-factor-type'
          | 'role'
          | 'incident-involvement'
          | 'incident-location'
          | 'incident-type'
          | 'interviewee-role'
          | 'outcome-type'
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Reference data found */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ReferenceData'][]
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The reference data associated with this domain was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  addReferenceDataCode: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Reference data domain. */
        domain:
          | 'area-of-work'
          | 'contributory-factor-type'
          | 'role'
          | 'incident-involvement'
          | 'incident-location'
          | 'incident-type'
          | 'interviewee-role'
          | 'outcome-type'
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateReferenceDataRequest']
      }
    }
    responses: {
      /** @description Reference data code added */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ReferenceData']
        }
      }
      /** @description Bad request */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The reference data associated with this domain was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getCsipRecordsByPrisonNumber: {
    parameters: {
      query?: {
        /**
         * @description Filter CSIP records that contain the search text in their Log Code. The search is case insensitive.
         * @example Search text
         */
        logCode?: string
        /**
         * @description Filter CSIP records that have a created timestamp at or after the supplied time.
         * @example 2021-09-27T14:19:25
         */
        createdAtStart?: string
        /**
         * @description Filter CSIP records that have a created timestamp at or before the supplied time.
         * @example 2021-09-27T14:19:25
         */
        createdAtEnd?: string
        /** @description Zero-based page index (0..N) */
        page?: number
        /** @description The size of the page to be returned */
        size?: number
        /** @description Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported. */
        sort?: string[]
      }
      header?: never
      path: {
        /** @description Prison Number of the prisoner */
        prisonNumber: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description CSIP records found */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['PageCsipRecord']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  createCsipRecord: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Prison Number of the prisoner */
        prisonNumber: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateCsipRecordRequest']
      }
    }
    responses: {
      /** @description CSIP record created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['CsipRecord']
        }
      }
      /** @description Bad request */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  createScreeningOutcome: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description CSIP record unique identifier */
        recordUuid: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateSaferCustodyScreeningOutcomeRequest']
      }
    }
    responses: {
      /** @description Safer Custody Screening Outcome added to CSIP referral */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['SaferCustodyScreeningOutcome']
        }
      }
      /** @description Bad request */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The CSIP referral associated with this identifier was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Conflict. The CSIP referral already has a Safer Custody Screening Outcome created. */
      409: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  updateScreeningOutcome: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description CSIP record unique identifier */
        recordUuid: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['UpdateSaferCustodyScreeningOutcomeRequest']
      }
    }
    responses: {
      /** @description Safer Custody Screening Outcome updated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['SaferCustodyScreeningOutcome']
        }
      }
      /** @description Bad request */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The CSIP referral associated with this identifier was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  createInvestigation: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description CSIP record unique identifier */
        recordUuid: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateInvestigationRequest']
      }
    }
    responses: {
      /** @description Investigation and interviews added to CSIP referral */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Investigation']
        }
      }
      /** @description Bad request */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The CSIP referral associated with this identifier was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Conflict. The CSIP referral already has an Investigation created. */
      409: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  updateInvestigation: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description CSIP record unique identifier */
        recordUuid: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['UpdateInvestigationRequest']
      }
    }
    responses: {
      /** @description Investigation updated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Investigation']
        }
      }
      /** @description Bad request */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The CSIP referral associated with this identifier was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  createInterview: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description CSIP record unique identifier */
        recordUuid: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateInterviewRequest']
      }
    }
    responses: {
      /** @description Interview added to CSIP referral */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Interview']
        }
      }
      /** @description Bad request */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The CSIP referral associated with this identifier was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  createDecision: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description CSIP record unique identifier */
        recordUuid: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateDecisionAndActionsRequest']
      }
    }
    responses: {
      /** @description Decision and actions added to CSIP referral */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['DecisionAndActions']
        }
      }
      /** @description Bad request */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The CSIP referral associated with this identifier was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The CSIP referral associated with this identifier already has a decision and actions */
      409: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  updateDecision: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description CSIP record unique identifier */
        recordUuid: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['UpdateDecisionAndActionsRequest']
      }
    }
    responses: {
      /** @description Decision and Actions updated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['DecisionAndActions']
        }
      }
      /** @description Bad request */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The CSIP referral associated with this identifier was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  createContributoryFactor: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description CSIP record unique identifier */
        recordUuid: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateContributoryFactorRequest']
      }
    }
    responses: {
      /** @description New contributory factor added to CSIP referral */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ContributoryFactor']
        }
      }
      /** @description Bad request */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The CSIP referral associated with this identifier was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  createPlan: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description CSIP record unique identifier */
        recordUuid: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreatePlanRequest']
      }
    }
    responses: {
      /** @description CSIP plan and identified needs created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Plan']
        }
      }
      /** @description Bad request */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The CSIP referral associated with this identifier was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  updatePlan: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description CSIP record unique identifier */
        recordUuid: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['UpdatePlanRequest']
      }
    }
    responses: {
      /** @description CSIP Plan updated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Plan']
        }
      }
      /** @description Bad request */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The CSIP plan associated with this identifier was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  createReview: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description CSIP record unique identifier */
        recordUuid: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateReviewRequest']
      }
    }
    responses: {
      /** @description Reviews and attendees added to CSIP plan */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Review']
        }
      }
      /** @description Bad request */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The CSIP plan associated with this identifier was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  createIdentifiedNeed: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description CSIP record unique identifier */
        recordUuid: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateIdentifiedNeedRequest']
      }
    }
    responses: {
      /** @description Identified need added to CSIP plan */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['IdentifiedNeed']
        }
      }
      /** @description Bad request */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The CSIP plan associated with this identifier was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  createAttendee: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Review unique identifier */
        reviewUuid: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateAttendeeRequest']
      }
    }
    responses: {
      /** @description Attendee added to review */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Attendee']
        }
      }
      /** @description Bad request */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The review associated with this identifier was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  updateReferenceDataCode: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Reference data domain. */
        domain:
          | 'area-of-work'
          | 'contributory-factor-type'
          | 'role'
          | 'incident-involvement'
          | 'incident-location'
          | 'incident-type'
          | 'interviewee-role'
          | 'outcome-type'
        /** @description Short code of the reference data to be updated */
        code: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['UpdateReferenceDataRequest']
      }
    }
    responses: {
      /** @description Reference data code updated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ReferenceData']
        }
      }
      /** @description Bad request */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The reference data associated with this domain and code was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  reactivateReferenceDataCode: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Reference data domain. */
        domain:
          | 'area-of-work'
          | 'contributory-factor-type'
          | 'role'
          | 'incident-involvement'
          | 'incident-location'
          | 'incident-type'
          | 'interviewee-role'
          | 'outcome-type'
        /** @description Short code of the reference data to be reactivated */
        code: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Reference data code reactivated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ReferenceData']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The reference data associated with this domain and code was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  deactivateReferenceDataCode: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Reference data domain. */
        domain:
          | 'area-of-work'
          | 'contributory-factor-type'
          | 'role'
          | 'incident-involvement'
          | 'incident-location'
          | 'incident-type'
          | 'interviewee-role'
          | 'outcome-type'
        /** @description Short code of the reference data to be deactivated */
        code: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Reference data code deactivated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ReferenceData']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The reference data associated with this domain and code was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  updateReferral: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description CSIP record unique identifier */
        recordUuid: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['UpdateReferralRequest']
      }
    }
    responses: {
      /** @description CSIP referral updated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Referral']
        }
      }
      /** @description Bad request */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The CSIP referral associated with this identifier was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  updateCsipRecord: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description CSIP record unique identifier */
        recordUuid: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['UpdateCsipRecordRequest']
      }
    }
    responses: {
      /** @description CSIP record updated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['CsipRecord']
        }
      }
      /** @description Bad request */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The CSIP record associated with this identifier was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  deleteInterview: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Interview unique identifier */
        interviewUuid: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Interview deleted */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The interview associated with this identifier was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  updateInterview: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Interview unique identifier */
        interviewUuid: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['UpdateInterviewRequest']
      }
    }
    responses: {
      /** @description Interview updated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Interview']
        }
      }
      /** @description Bad request */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The interview associated with this identifier was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  deleteContributoryFactor: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Contributory Factor unique identifier */
        contributoryFactorUuid: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Contributory factor deleted */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The contributory factor associated with this identifier was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  updateContributoryFactor: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Contributory Factor unique identifier */
        contributoryFactorUuid: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['UpdateContributoryFactorRequest']
      }
    }
    responses: {
      /** @description Contributory factor updated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ContributoryFactor']
        }
      }
      /** @description Bad request */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The contributory factor associated with this identifier was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  updateReview: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Review unique identifier */
        reviewUuid: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['UpdateReviewRequest']
      }
    }
    responses: {
      /** @description Review updated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Review']
        }
      }
      /** @description Bad request */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The review associated with this identifier was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  deleteAttendee: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Attendee unique identifier */
        attendeeUuid: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Attendee deleted */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The attendee associated with this identifier was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  updateAttendee: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Attendee unique identifier */
        attendeeUuid: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['UpdateAttendeeRequest']
      }
    }
    responses: {
      /** @description Attendee updated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Attendee']
        }
      }
      /** @description Bad request */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The attendee associated with this identifier was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  deleteIdentifiedNeed: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Identified Need unique identifier */
        identifiedNeedUuid: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Identified need deleted */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The identified need associated with this identifier was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  updateIdentifiedNeed: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Identified Need unique identifier */
        identifiedNeedUuid: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['UpdateIdentifiedNeedRequest']
      }
    }
    responses: {
      /** @description Identified Need updated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['IdentifiedNeed']
        }
      }
      /** @description Bad request */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The identified need associated with this identifier was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getCsipRecordsByPrisonCode: {
    parameters: {
      query?: {
        /**
         * @description Filter CSIP records that contain the search text in their Log Code. The search is case insensitive.
         * @example Search text
         */
        logCode?: string
        /**
         * @description Filter CSIP records that have a created timestamp at or after the supplied time.
         * @example 2021-09-27T14:19:25
         */
        createdAtStart?: string
        /**
         * @description Filter CSIP records that have a created timestamp at or before the supplied time.
         * @example 2021-09-27T14:19:25
         */
        createdAtEnd?: string
        /** @description Zero-based page index (0..N) */
        page?: number
        /** @description The size of the page to be returned */
        size?: number
        /** @description Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported. */
        sort?: string[]
      }
      header?: never
      path: {
        /** @description Prison Code of the prison */
        prisonCode: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description CSIP records found */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['PageCsipRecord']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  retrieveCsipRecord: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description CSIP record unique identifier */
        recordUuid: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description CSIP record found */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['CsipRecord']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The CSIP record associated with this identifier was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  deleteCsipRecord: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description CSIP record unique identifier */
        recordUuid: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description CSIP record deleted */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Bad request */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The CSIP record associated with this identifier was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
}
