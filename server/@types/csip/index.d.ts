/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/sync/csip-records': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    /** @description
     *
     *     Requires one of the following roles:
     *     * ROLE_NOMIS_CSIP */
    put: operations['syncCsipRecord']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/sync/csip-records/move': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    /** @description
     *
     *     Requires one of the following roles:
     *     * ROLE_NOMIS_CSIP */
    put: operations['moveCsipRecord']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/csip-records/{recordUuid}/referral': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    /**
     * Merge the referral with contributory factors
     * @description
     *
     *     Requires one of the following roles:
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__CHALLENGE_SUPPORT_INTERVENTION_PLAN_UI
     */
    put: operations['mergeReferral']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/csip-records/{recordUuid}/referral/safer-custody-screening': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    /**
     * Upsert a safer custody screening outcome to the referral.
     * @description Create or update the safer custody screening outcome. Publishes person.csip.record.updated event with saferCustodyScreeningOutcomeAffected = true
     *
     *     Requires one of the following roles:
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__CHALLENGE_SUPPORT_INTERVENTION_PLAN_UI
     */
    put: operations['upsertScreeningOutcome']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/csip-records/{recordUuid}/referral/decision-and-actions': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    /**
     * Add decision and actions to the referral.
     * @description Create or update the decision and actions. Publishes person.csip.record.updated event with affected component of DecisionAndActions
     *
     *     Requires one of the following roles:
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__CHALLENGE_SUPPORT_INTERVENTION_PLAN_UI
     */
    put: operations['upsertDecision']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/prisoners/{prisonNumber}/csip-records': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Create a CSIP record for a prisoner.
     * @description Create the CSIP record, referral and contributory factors. This starts the CSIP process. Publishes person.csip.record.created and person.csip.contributory-factor.created events
     *
     *     Requires one of the following roles:
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__CHALLENGE_SUPPORT_INTERVENTION_PLAN_UI
     */
    post: operations['createCsipRecord']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/csip-records/{recordUuid}/referral/investigation': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Add investigation and any interviews to the referral.
     * @description Create the investigation and any interviews. Publishes person.csip.record.updated event with affected component Investigation and person.csip.interview.created event
     *
     *     Requires one of the following roles:
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__CHALLENGE_SUPPORT_INTERVENTION_PLAN_UI
     */
    post: operations['createInvestigation']
    delete?: never
    options?: never
    head?: never
    /**
     * Add or update the investigation.
     * @description Create or update the investigation. Publishes person.csip.record.updated event with affected component of Investigation
     *
     *     Requires one of the following roles:
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__CHALLENGE_SUPPORT_INTERVENTION_PLAN_UI
     */
    patch: operations['updateInvestigation']
    trace?: never
  }
  '/csip-records/{recordUuid}/referral/investigation/interviews': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Add an interview to the investigation.
     * @description Add an interview to the investigation. Publishes person.csip.interview.created event
     *
     *     Requires one of the following roles:
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__CHALLENGE_SUPPORT_INTERVENTION_PLAN_UI
     */
    post: operations['createInterview']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/csip-records/{recordUuid}/referral/contributory-factors': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Add a contributory factor to the referral.
     * @description Add a contributory factor to the referral. Publishes person.csip.contributory-factor.created event
     *
     *     Requires one of the following roles:
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__CHALLENGE_SUPPORT_INTERVENTION_PLAN_UI
     */
    post: operations['createContributoryFactor']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/csip-records/{recordUuid}/plan': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Create the CSIP plan
     * @description Create the CSIP plan. Publishes person.csip.record.updated event with affected component of Plan and IdentifiedNeed
     *
     *     Requires one of the following roles:
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__CHALLENGE_SUPPORT_INTERVENTION_PLAN_UI
     */
    post: operations['createPlan']
    delete?: never
    options?: never
    head?: never
    /**
     * Create or update the CSIP plan
     * @description Create or update the CSIP plan. Publishes person.csip.record.updated event with affected component of Plan
     *
     *     Requires one of the following roles:
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__CHALLENGE_SUPPORT_INTERVENTION_PLAN_UI
     */
    patch: operations['updatePlan']
    trace?: never
  }
  '/csip-records/{recordUuid}/plan/reviews': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Add a review of the plan and any attendees.
     * @description Create a review of the plan and any attendees. Publishes prisoner-csip.review-created and prisoner-csip.attendee-created events
     *
     *     Requires one of the following roles:
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__CHALLENGE_SUPPORT_INTERVENTION_PLAN_UI
     */
    post: operations['createReview']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/csip-records/{recordUuid}/plan/identified-needs': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Add an identified need to the plan.
     * @description Add an identified need to the plan. Publishes prisoner-csip.identified-need.created event
     *
     *     Requires one of the following roles:
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__CHALLENGE_SUPPORT_INTERVENTION_PLAN_UI
     */
    post: operations['createIdentifiedNeed']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/csip-records/plan/reviews/{reviewUuid}/attendees': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Add an attendee to a review of the plan.
     * @description Add an attendee to a review of the plan. Publishes prisoner-csip.attendee-created event
     *
     *     Requires one of the following roles:
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__CHALLENGE_SUPPORT_INTERVENTION_PLAN_UI
     */
    post: operations['createAttendee']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/csip-records/{recordUuid}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Get a CSIP record by its unique identifier
     * @description Returns the CSIP record with the matching identifier.
     *
     *     Requires one of the following roles:
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__CHALLENGE_SUPPORT_INTERVENTION_PLAN_UI
     *     * ROLE_NOMIS_CSIP
     */
    get: operations['retrieveCsipRecord']
    put?: never
    post?: never
    /**
     * Delete a complete CSIP record.
     * @description Delete the whole of a CSIP record, including its referral and plan. Publishes prisoner-csip.csip-record-deleted event
     *
     *     Requires one of the following roles:
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__CHALLENGE_SUPPORT_INTERVENTION_PLAN_UI
     */
    delete: operations['deleteCsipRecord']
    options?: never
    head?: never
    /**
     * Update the log code for a CSIP record and/or optionally the referral.
     * @description Update the log code for a CSIP record. Publishes person.csip.record.updated event with affected component of `Record`
     *
     *     Requires one of the following roles:
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__CHALLENGE_SUPPORT_INTERVENTION_PLAN_UI
     */
    patch: operations['updateCsipRecord']
    trace?: never
  }
  '/csip-records/referral/investigation/interviews/{interviewUuid}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    /**
     * Update an interview on the investigation.
     * @description Update an interview on the investigation. Publishes prisoner-csip.interview-updated event
     *
     *     Requires one of the following roles:
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__CHALLENGE_SUPPORT_INTERVENTION_PLAN_UI
     */
    patch: operations['updateInterview']
    trace?: never
  }
  '/csip-records/referral/contributory-factors/{contributoryFactorUuid}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    /**
     * Update a contributory factor on the referral.
     * @description Update a contributory factor on the referral. Publishes prisoner-csip.contributory-factor-updated event
     *
     *     Requires one of the following roles:
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__CHALLENGE_SUPPORT_INTERVENTION_PLAN_UI
     */
    patch: operations['updateContributoryFactor']
    trace?: never
  }
  '/csip-records/plan/reviews/{reviewUuid}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    /**
     * Update a review of the plan.
     * @description Update a review of the plan only. Cannot update attendees with this endpoint. Publishes prisoner-csip.review-updated event
     *
     *     Requires one of the following roles:
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__CHALLENGE_SUPPORT_INTERVENTION_PLAN_UI
     */
    patch: operations['updateReview']
    trace?: never
  }
  '/csip-records/plan/reviews/attendees/{attendeeUuid}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    /**
     * Update an attendee on a review of the plan.
     * @description Update an attendee on a review of the plan. Publishes prisoner-csip.attendee-updated event
     *
     *     Requires one of the following roles:
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__CHALLENGE_SUPPORT_INTERVENTION_PLAN_UI
     */
    patch: operations['updateAttendee']
    trace?: never
  }
  '/csip-records/plan/identified-needs/{identifiedNeedUuid}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    /**
     * Update an identified need on the plan.
     * @description Update an identified need on the plan. Publishes prisoner-csip.identified-need-updated event
     *
     *     Requires one of the following roles:
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__CHALLENGE_SUPPORT_INTERVENTION_PLAN_UI
     */
    patch: operations['updateIdentifiedNeed']
    trace?: never
  }
  '/sync/csip-records/{prisonNumber}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieve all CSIP records for a prisoner.
     * @description
     *
     *     Requires one of the following roles:
     *     * ROLE_NOMIS_CSIP
     */
    get: operations['getCsipRecordsByPrisonNumbers']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/search/csip-records': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Search and filter all CSIP records.
     * @description Returns the CSIP records matching search query and filters
     *
     *     Requires one of the following roles:
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__CHALLENGE_SUPPORT_INTERVENTION_PLAN_UI
     */
    get: operations['findCsipRecords']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/reference-data/{domain}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieve all reference data fo a domain.
     * @description Get all reference data for a domain e.g. area-of-work
     *
     *     Requires one of the following roles:
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__CHALLENGE_SUPPORT_INTERVENTION_PLAN_UI
     */
    get: operations['getReferenceData']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/prisons/{prisonCode}/csip-records/overview': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieve an overview of CSIP records for a given prison
     * @description
     *
     *     Requires one of the following roles:
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__CHALLENGE_SUPPORT_INTERVENTION_PLAN_UI
     */
    get: operations['getCsipOverview']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/prisoners/{prisonNumber}/csip-records/current': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Retrieve the current CSIP record for a prisoner.
     * @description Returns a summary of the current CSIP record and counts of opened csip and referrals for the prisoner
     *
     *     Requires one of the following roles:
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__RO
     *     * ROLE_CHALLENGE_SUPPORT_INTERVENTION_PLAN__CHALLENGE_SUPPORT_INTERVENTION_PLAN_UI
     */
    get: operations['getCurrentCsipRecord']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/sync/csip-records/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post?: never
    /** @description
     *
     *     Requires one of the following roles:
     *     * ROLE_NOMIS_CSIP */
    delete: operations['deleteRecord']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
}
export type webhooks = Record<string, never>
export interface components {
  schemas: {
    PersonSummaryRequest: {
      firstName: string
      lastName: string
      status: string
      restrictedPatient?: boolean
      prisonCode?: string
      cellLocation?: string
      supportingPrisonCode?: string
    }
    SyncAttendeeRequest: {
      /** @description Name of review attendee/contributor. */
      name?: string
      /** @description Role of review attendee/contributor. */
      role?: string
      /** @description If the person attended the review. */
      isAttended?: boolean
      /** @description Description of attendee contribution. */
      contribution?: string
      /** Format: int64 */
      legacyId: number
      /** Format: uuid */
      id?: string
    }
    SyncContributoryFactorRequest: {
      /** @description The type of contributory factor to the incident or motivation for CSIP referral. */
      factorTypeCode: string
      /** @description Additional information about the contributory factor to the incident or motivation for CSIP referral. */
      comment?: string
      /** Format: int64 */
      legacyId: number
      /** Format: uuid */
      id?: string
    }
    SyncCsipRequest: {
      prisonNumber: string
      /** @description User entered identifier for the CSIP record. Defaults to the prison code. */
      logCode?: string
      /** @description The referral that results in the creation of this CSIP record. */
      referral?: components['schemas']['SyncReferralRequest']
      plan?: components['schemas']['SyncPlanRequest']
      prisonCodeWhenRecorded?: string
      /** Format: date-time */
      actionedAt: string
      actionedBy: string
      activeCaseloadId?: string
      /** Format: int64 */
      legacyId: number
      /** Format: uuid */
      id?: string
      personSummary?: components['schemas']['PersonSummaryRequest']
    }
    SyncDecisionAndActionsRequest: {
      /** @description The conclusion of the referral and reasons for the outcome decision. */
      conclusion?: string
      /** @description The outcome decision for the referral. */
      outcomeTypeCode?: string
      /** @description The role of the person making the outcome decision. */
      signedOffByRoleCode?: string
      /**
       * Format: date
       * @description The date the outcome decision was made.
       * @example 2021-09-27
       */
      date?: string
      /** @description The username of the user who recorded the outcome decision. */
      recordedBy?: string
      /** @description The displayable name of the user who recorded the outcome decision. */
      recordedByDisplayName?: string
      /** @description The next steps that should be taken following the outcome decision. */
      nextSteps?: string
      /** @description Any other actions that are recommended to be considered. */
      actionOther?: string
      /** @description A list of recommended actions. */
      actions: (
        | 'OPEN_CSIP_ALERT'
        | 'NON_ASSOCIATIONS_UPDATED'
        | 'OBSERVATION_BOOK'
        | 'UNIT_OR_CELL_MOVE'
        | 'CSRA_OR_RSRA_REVIEW'
        | 'SERVICE_REFERRAL'
        | 'SIM_REFERRAL'
      )[]
    }
    SyncInterviewRequest: {
      /** @description Name of the person being interviewed. */
      interviewee: string
      /**
       * Format: date
       * @description The date the interview took place.
       * @example 2021-09-27
       */
      interviewDate: string
      /** @description What role the interviewee played in the incident or referral. */
      intervieweeRoleCode: string
      /** @description Information provided in interview. */
      interviewText?: string
      /** Format: int64 */
      legacyId: number
      /** Format: uuid */
      id?: string
    }
    SyncInvestigationRequest: {
      /** @description The names of the staff involved in the investigation. */
      staffInvolved?: string
      /** @description Any evidence that was secured as part of the investigation. */
      evidenceSecured?: string
      /** @description The reasons why the incident occurred. */
      occurrenceReason?: string
      /** @description The normal behaviour of the person in prison. */
      personsUsualBehaviour?: string
      /** @description What triggers the person in prison has that could have motivated the incident. */
      personsTrigger?: string
      /** @description Any protective factors to reduce the person's risk factors and prevent triggers for instance of violence */
      protectiveFactors?: string
      /** @description The interviews in relation to the investigation */
      interviews: components['schemas']['SyncInterviewRequest'][]
    }
    SyncNeedRequest: {
      /** @description Details of the need identified in the CSIP plan. */
      identifiedNeed: string
      /** @description The name of the person who is responsible for taking action on the intervention. */
      responsiblePerson: string
      /**
       * Format: date
       * @description The date the need was identified.
       * @example 2021-09-27
       */
      createdDate: string
      /**
       * Format: date
       * @description The target date the need should be progressed or resolved.
       * @example 2021-09-27
       */
      targetDate: string
      /**
       * Format: date
       * @description The date the identified need was resolved or closed.
       * @example 2021-09-27
       */
      closedDate?: string
      /** @description The planned intervention for the identified need. */
      intervention: string
      /** @description How the plan to address the identified need is progressing. */
      progression?: string
      /** Format: int64 */
      legacyId: number
      /** Format: uuid */
      id?: string
    }
    SyncPlanRequest: {
      /** @description The case manager assigned to the CSIP plan. */
      caseManager?: string
      /** @description The reasons motivating the creation of a CSIP plan. */
      reasonForPlan?: string
      /** Format: date */
      firstCaseReviewDate?: string
      /** @description The needs identified in the CSIP plan. */
      identifiedNeeds: components['schemas']['SyncNeedRequest'][]
      /** @description The reviews of the CSIP plan. */
      reviews: components['schemas']['SyncReviewRequest'][]
    }
    SyncReferralRequest: {
      /** Format: date */
      referralDate: string
      /**
       * Format: date
       * @description The date the incident that motivated the CSIP referral occurred
       * @example 2021-09-27
       */
      incidentDate: string
      /**
       * @description The time the incident that motivated the CSIP referral occurred
       * @example 14:19:25
       */
      incidentTime?: string
      /** @description The type of incident that motivated the CSIP referral. */
      incidentTypeCode: string
      /** @description The location of incident that motivated the CSIP referral. */
      incidentLocationCode: string
      /** @description The person reporting the incident or creating the CSIP referral. */
      referredBy: string
      /** @description The area of work of the person reporting the incident or creating the CSIP referral. */
      refererAreaCode: string
      /** @description Was this referral proactive or preventative. */
      isProactiveReferral?: boolean
      /** @description Were any members of staff assaulted in the incident. */
      isStaffAssaulted?: boolean
      /** @description Name or names of assaulted members of staff if any. */
      assaultedStaffName?: string
      /** @description The type of involvement the person had in the incident */
      incidentInvolvementCode?: string
      /** @description The reasons why there is cause for concern. */
      descriptionOfConcern?: string
      /** @description The reasons already known about the causes of the incident or motivation for CSIP referral. */
      knownReasons?: string
      /** @description Any other information about the incident or reasons for CSIP referral. */
      otherInformation?: string
      /**
       * @description Records whether the safer custody team been informed.
       * @enum {string}
       */
      isSaferCustodyTeamInformed: 'YES' | 'NO' | 'DO_NOT_KNOW'
      /** @description Is the referral complete. */
      isReferralComplete?: boolean
      /** Format: date */
      completedDate?: string
      completedBy?: string
      completedByDisplayName?: string
      /** @description Contributory factors to the incident that motivated the referral. */
      contributoryFactors: components['schemas']['SyncContributoryFactorRequest'][]
      saferCustodyScreeningOutcome?: components['schemas']['SyncScreeningOutcomeRequest']
      investigation?: components['schemas']['SyncInvestigationRequest']
      decisionAndActions?: components['schemas']['SyncDecisionAndActionsRequest']
    }
    SyncReviewRequest: {
      /**
       * Format: date
       * @description The date of the review.
       * @example 2021-09-27
       */
      reviewDate: string
      /** @description The username of the person who recorded the review. */
      recordedBy: string
      /** @description The displayable name of the person who recorded the review. */
      recordedByDisplayName: string
      /**
       * Format: date
       * @description The date of the next review.
       * @example 2021-09-27
       */
      nextReviewDate?: string
      /**
       * Format: date
       * @description The date the CSIP plan was closed following a review outcome decision to close it.
       */
      csipClosedDate?: string
      /** @description Additional information about the review. */
      summary?: string
      /** @description A list of actions following the review. */
      actions: ('RESPONSIBLE_PEOPLE_INFORMED' | 'CSIP_UPDATED' | 'REMAIN_ON_CSIP' | 'CASE_NOTE' | 'CLOSE_CSIP')[]
      /** @description The attendees/contributors to the review. */
      attendees: components['schemas']['SyncAttendeeRequest'][]
      /** Format: int64 */
      legacyId: number
      /** Format: uuid */
      id?: string
    }
    SyncScreeningOutcomeRequest: {
      /** @description The type of outcome of the safer custody screening. */
      outcomeTypeCode: string
      /** @description The reasons for the safer custody screening outcome decision. */
      reasonForDecision?: string
      /**
       * Format: date
       * @description The date of the safer custody screening outcome.
       * @example 2021-09-27
       */
      date: string
      /** @description The username of the user who recorded the screening outcome. */
      recordedBy: string
      /** @description The displayable name of the user who recorded the screening outcome. */
      recordedByDisplayName: string
    }
    ErrorResponse: {
      /** Format: int32 */
      status: number
      errorCode?: string
      userMessage?: string
      developerMessage?: string
      moreInfo?: string
    }
    ResponseMapping: {
      /** @enum {string} */
      component:
        | 'RECORD'
        | 'REFERRAL'
        | 'CONTRIBUTORY_FACTOR'
        | 'SAFER_CUSTODY_SCREENING_OUTCOME'
        | 'INVESTIGATION'
        | 'INTERVIEW'
        | 'DECISION_AND_ACTIONS'
        | 'PLAN'
        | 'IDENTIFIED_NEED'
        | 'REVIEW'
        | 'ATTENDEE'
      /** Format: int64 */
      id: number
      /** Format: uuid */
      uuid: string
    }
    SyncResponse: {
      mappings: components['schemas']['ResponseMapping'][]
    }
    MoveCsipRequest: {
      fromPrisonNumber: string
      toPrisonNumber: string
      recordUuids: string[]
    }
    /** @description The request body to update a contributory factor to the incident that motivated the CSIP referral */
    MergeContributoryFactorRequest: {
      /** @description The type of contributory factor to the incident or motivation for CSIP referral. */
      factorTypeCode: string
      /** @description Additional information about the contributory factor to the incident or motivation for CSIP referral. */
      comment?: string
      /** Format: uuid */
      factorUuid?: string
    }
    /** @description The detail for updating a CSIP referral */
    MergeReferralRequest: {
      /**
       * Format: date
       * @description The date the incident that motivated the CSIP referral occurred
       * @example 2021-09-27
       */
      incidentDate: string
      /**
       * @description The time the incident that motivated the CSIP referral occurred
       * @example 14:19:25
       */
      incidentTime?: string
      /** @description The type of incident that motivated the CSIP referral. */
      incidentTypeCode: string
      /** @description The location of incident that motivated the CSIP referral. */
      incidentLocationCode: string
      /** @description The person reporting the incident or creating the CSIP referral. */
      referredBy: string
      /** @description The area of work of the person reporting the incident or creating the CSIP referral. */
      refererAreaCode: string
      /** @description Was this referral proactive or preventative. */
      isProactiveReferral?: boolean
      /** @description Were any members of staff assaulted in the incident. */
      isStaffAssaulted?: boolean
      /** @description Name or names of assaulted members of staff if any. */
      assaultedStaffName?: string
      /** @description The type of involvement the person had in the incident */
      incidentInvolvementCode?: string
      /** @description The reasons why there is cause for concern. */
      descriptionOfConcern?: string
      /** @description The reasons already known about the causes of the incident or motivation for CSIP referral. */
      knownReasons?: string
      /** @description Any other information about the incident or reasons for CSIP referral. */
      otherInformation?: string
      /**
       * @description Records whether the safer custody team been informed.
       * @enum {string}
       */
      isSaferCustodyTeamInformed: 'YES' | 'NO' | 'DO_NOT_KNOW'
      /** @description Is the referral complete. */
      isReferralComplete?: boolean
      /** @description Contributory factors to the incident that motivated the referral. */
      contributoryFactors: components['schemas']['MergeContributoryFactorRequest'][]
    }
    /** @description An Attendee or Contributor to a Review of a CSIP Plan */
    Attendee: {
      /**
       * Format: uuid
       * @description The unique identifier assigned to the Attendee
       * @example 8cdadcf3-b003-4116-9956-c99bd8df6a00
       */
      attendeeUuid: string
      /** @description Name of review attendee/contributor. */
      name?: string
      /** @description Role of review attendee/contributor. */
      role?: string
      /** @description If the person attended the review. */
      isAttended?: boolean
      /** @description Description of attendee contribution. */
      contribution?: string
    }
    /** @description The contributory factor to the incident that motivated the CSIP referral */
    ContributoryFactor: {
      /**
       * Format: uuid
       * @description The unique identifier assigned to the Contributory Factor
       * @example 8cdadcf3-b003-4116-9956-c99bd8df6a00
       */
      factorUuid: string
      /** @description The type of contributory factor to the incident or motivation for CSIP referral. */
      factorType: components['schemas']['ReferenceData']
      /** @description Additional information about the contributory factor to the incident or motivation for CSIP referral. */
      comment?: string
    }
    /** @description A CSIP Record associated with a person */
    CsipRecord: {
      /**
       * Format: uuid
       * @description The unique identifier assigned to the CSIP Record
       * @example 8cdadcf3-b003-4116-9956-c99bd8df6a00
       */
      recordUuid: string
      /** @description The prison number of the person the CSIP record is for. */
      prisonNumber: string
      /** @description The prison code where the person was resident at the time the CSIP record was created. */
      prisonCodeWhenRecorded?: string
      /** @description User entered identifier for the CSIP record. Defaults to the prison code. */
      logCode?: string
      /** @description The referral that results in the creation of this CSIP record. */
      referral: components['schemas']['Referral']
      /** @description The CSIP Plan of this CSIP record. */
      plan?: components['schemas']['Plan']
      /** @description The current status of the CSIP record. */
      status: components['schemas']['ReferenceData']
    }
    /** @description The Decision and Actions for the CSIP referral */
    DecisionAndActions: {
      /** @description The conclusion of the referral and reasons for the outcome decision. */
      conclusion?: string
      /** @description The outcome decision for the referral. */
      outcome?: components['schemas']['ReferenceData']
      /** @description The role of the person making the outcome decision. */
      signedOffByRole?: components['schemas']['ReferenceData']
      /** @description The username of the user who recorded the outcome decision. */
      recordedBy?: string
      /** @description The displayable name of the user who recorded the outcome decision. */
      recordedByDisplayName?: string
      /**
       * Format: date
       * @description The date the outcome decision was made.
       * @example 2021-09-27
       */
      date?: string
      /** @description The next steps that should be taken following the outcome decision. */
      nextSteps?: string
      /** @description A list of recommended actions. */
      actions: (
        | 'OPEN_CSIP_ALERT'
        | 'NON_ASSOCIATIONS_UPDATED'
        | 'OBSERVATION_BOOK'
        | 'UNIT_OR_CELL_MOVE'
        | 'CSRA_OR_RSRA_REVIEW'
        | 'SERVICE_REFERRAL'
        | 'SIM_REFERRAL'
      )[]
      /** @description Any other actions that are recommended to be considered. */
      actionOther?: string
      history: unknown[]
    }
    /** @description A need identified in the CSIP Plan */
    IdentifiedNeed: {
      /**
       * Format: uuid
       * @description The unique identifier assigned to the Contributory Factor
       * @example 8cdadcf3-b003-4116-9956-c99bd8df6a00
       */
      identifiedNeedUuid: string
      /** @description Details of the need identified in the CSIP plan. */
      identifiedNeed: string
      /** @description The name of the person who is responsible for taking action on the intervention. */
      responsiblePerson: string
      /**
       * Format: date
       * @description The date the need was identified.
       * @example 2021-09-27
       */
      createdDate: string
      /**
       * Format: date
       * @description The target date the need should be progressed or resolved.
       * @example 2021-09-27
       */
      targetDate: string
      /**
       * Format: date
       * @description The date the identified need was resolved or closed.
       * @example 2021-09-27
       */
      closedDate?: string
      /** @description The planned intervention for the identified need. */
      intervention: string
      /** @description How the plan to address the identified need is progressing. */
      progression?: string
    }
    /** @description An interview in relation to the investigation on the incident that motivated the CSIP referral */
    Interview: {
      /**
       * Format: uuid
       * @description The unique identifier assigned to the Interview
       * @example 8cdadcf3-b003-4116-9956-c99bd8df6a00
       */
      interviewUuid: string
      /** @description Name of the person being interviewed. */
      interviewee: string
      /**
       * Format: date
       * @description The date the interview took place.
       * @example 2021-09-27
       */
      interviewDate: string
      /** @description What role the interviewee played in the incident or referral. */
      intervieweeRole: components['schemas']['ReferenceData']
      /** @description Information provided in interview. */
      interviewText?: string
    }
    /** @description The investigation on the incident that motivated the CSIP referral */
    Investigation: {
      /** @description The names of the staff involved in the investigation. */
      staffInvolved?: string
      /** @description Any evidence that was secured as part of the investigation. */
      evidenceSecured?: string
      /** @description The reasons why the incident occurred. */
      occurrenceReason?: string
      /** @description The normal behaviour of the person in prison. */
      personsUsualBehaviour?: string
      /** @description What triggers the person in prison has that could have motivated the incident. */
      personsTrigger?: string
      /** @description Any protective factors to reduce the person's risk factors and prevent triggers for instance of violence */
      protectiveFactors?: string
      /** @description Username of the user that created the investigation */
      recordedBy?: string
      /** @description Display name of the user that created the investigation */
      recordedByDisplayName?: string
      /** @description The interviews in relation to the Investigation */
      interviews: components['schemas']['Interview'][]
    }
    /** @description The CSIP Plan of a CSIP record */
    Plan: {
      /** @description The case manager assigned to the CSIP plan. */
      caseManager?: string
      /** @description The reasons motivating the creation of a CSIP plan. */
      reasonForPlan?: string
      /**
       * Format: date
       * @description The first date the CSIP plan should be reviewed.
       * @example 2021-09-27
       */
      firstCaseReviewDate?: string
      /**
       * Format: date
       * @description The next date the CSIP plan should be reviewed.
       * @example 2021-09-27
       */
      nextCaseReviewDate?: string
      /** @description The needs identified in the CSIP plan. */
      identifiedNeeds: components['schemas']['IdentifiedNeed'][]
      /** @description Regular reviews of the CSIP Plan */
      reviews: components['schemas']['Review'][]
      /** Format: date-time */
      createdAt?: string
    }
    /** @description A reference data code to categorise various aspects related to a CSIP record */
    ReferenceData: {
      /** @description The short code of a reference data */
      code: string
      /** @description The description of the reference data code */
      description?: string
      /**
       * Format: int32
       * @description The sequence number of the code. Used for ordering codes correctly in lists and drop downs.
       * @example 3
       */
      listSequence?: number
      /**
       * Format: date-time
       * @description The date and time the code was deactivated
       * @example 2023-11-08T09:53:34
       */
      deactivatedAt?: string
    }
    /** @description The referral of a CSIP record */
    Referral: {
      /**
       * Format: date
       * @description The date the referral was made
       * @example 2021-09-27
       */
      referralDate: string
      /**
       * Format: date
       * @description The date the incident that motivated the CSIP referral occurred
       * @example 2021-09-27
       */
      incidentDate: string
      /**
       * @description The time the incident that motivated the CSIP referral occurred
       * @example 14:19:25
       */
      incidentTime?: string
      /** @description The type of incident that motivated the CSIP referral. */
      incidentType: components['schemas']['ReferenceData']
      /** @description The location of incident that motivated the CSIP referral. */
      incidentLocation: components['schemas']['ReferenceData']
      /** @description The person reporting the incident or creating the CSIP referral. */
      referredBy: string
      /** @description The area of work of the person reporting the incident or creating the CSIP referral. */
      refererArea: components['schemas']['ReferenceData']
      /** @description Was this referral proactive or preventative. */
      isProactiveReferral?: boolean
      /** @description Were any members of staff assaulted in the incident. */
      isStaffAssaulted?: boolean
      /** @description Name or names of assaulted members of staff if any. */
      assaultedStaffName?: string
      /** @description The type of involvement the person had in the incident */
      incidentInvolvement?: components['schemas']['ReferenceData']
      /** @description The reasons why there is cause for concern. */
      descriptionOfConcern?: string
      /** @description The reasons already known about the causes of the incident or motivation for CSIP referral. */
      knownReasons?: string
      /** @description Any other information about the incident or reasons for CSIP referral. */
      otherInformation?: string
      /**
       * @description Records whether the safer custody team been informed.
       * @enum {string}
       */
      isSaferCustodyTeamInformed: 'YES' | 'NO' | 'DO_NOT_KNOW'
      /** @description Is the referral complete. */
      isReferralComplete?: boolean
      /**
       * Format: date
       * @description The date the referral was completed.
       */
      referralCompletedDate?: string
      /** @description The username of the person completing the referral */
      referralCompletedBy?: string
      /** @description The name of the person completing the referral */
      referralCompletedByDisplayName?: string
      /** @description Contributory factors to the incident that motivated the referral. */
      contributoryFactors: components['schemas']['ContributoryFactor'][]
      /** @description The investigation on the incident that motivated the CSIP referral. */
      investigation?: components['schemas']['Investigation']
      /** @description The Safer Custody Screening Outcome for the CSIP referral. */
      saferCustodyScreeningOutcome?: components['schemas']['SaferCustodyScreeningOutcome']
      /** @description The Decision and Actions for the CSIP referral. */
      decisionAndActions?: components['schemas']['DecisionAndActions']
    }
    /** @description A regular review of a CSIP Plan */
    Review: {
      /**
       * Format: uuid
       * @description The unique identifier assigned to the Review
       * @example 8cdadcf3-b003-4116-9956-c99bd8df6a00
       */
      reviewUuid: string
      /**
       * Format: int32
       * @description The sequence number of the Review. Used for ordering reviews correctly in lists and/or drop downs.
       * @example 3
       */
      reviewSequence: number
      /**
       * Format: date
       * @description The date of the review.
       * @example 2021-09-27
       */
      reviewDate: string
      /** @description The username of the person who recorded the review. */
      recordedBy: string
      /** @description The displayable name of the person who recorded the review. */
      recordedByDisplayName: string
      /**
       * Format: date
       * @description The date of the next review.
       * @example 2021-09-27
       */
      nextReviewDate?: string
      /**
       * Format: date
       * @description The date the CSIP plan was closed following a review outcome decision to close it.
       */
      csipClosedDate?: string
      /** @description Additional information about the review. */
      summary?: string
      /** @description A list of actions following the review. */
      actions: ('RESPONSIBLE_PEOPLE_INFORMED' | 'CSIP_UPDATED' | 'REMAIN_ON_CSIP' | 'CASE_NOTE' | 'CLOSE_CSIP')[]
      /** @description The attendees/contributors to the review. */
      attendees: components['schemas']['Attendee'][]
    }
    /** @description The Safer Custody Screening Outcome to the CSIP referral */
    SaferCustodyScreeningOutcome: {
      /** @description The type of outcome of the safer custody screening. */
      outcome: components['schemas']['ReferenceData']
      /** @description The username of the user who recorded the safer custody screening outcome. */
      recordedBy: string
      /** @description The displayable name of the user who recorded the safer custody screening outcome. */
      recordedByDisplayName: string
      /**
       * Format: date
       * @description The date of the safer custody screening outcome.
       * @example 2021-09-27
       */
      date: string
      /** @description The reasons for the safer custody screening outcome decision. */
      reasonForDecision?: string
      history: unknown[]
    }
    /** @description The request body to create or update the Safer Custody Screening Outcome on the CSIP referral */
    UpsertSaferCustodyScreeningOutcomeRequest: {
      /** @description The type of outcome of the safer custody screening. */
      outcomeTypeCode: string
      /**
       * Format: date
       * @description The date of the safer custody screening outcome.
       * @example 2021-09-27
       */
      date: string
      /** @description The reasons for the safer custody screening outcome decision. */
      reasonForDecision: string
      /** @description The username of the user who recorded the screening outcome. */
      recordedBy: string
      /** @description The displayable name of the user who recorded the screening outcome. */
      recordedByDisplayName: string
    }
    /** @description The request body to create a Decision and Actions for a CSIP referral */
    UpsertDecisionAndActionsRequest: {
      /** @description The conclusion of the referral and reasons for the outcome decision. */
      conclusion?: string
      /** @description The outcome decision for the referral. */
      outcomeTypeCode: string
      /** @description The role of the person making the outcome decision. */
      signedOffByRoleCode?: string
      /** @description The username of the user who recorded the outcome decision. */
      recordedBy?: string
      /** @description The displayable name of the user who recorded the outcome decision. */
      recordedByDisplayName?: string
      /**
       * Format: date
       * @description The date the outcome decision was made.
       * @example 2021-09-27
       */
      date?: string
      /** @description The next steps that should be taken following the outcome decision. */
      nextSteps?: string
      /** @description Any other actions that are recommended to be considered. */
      actionOther?: string
      /** @description A list of recommended actions. */
      actions: (
        | 'OPEN_CSIP_ALERT'
        | 'NON_ASSOCIATIONS_UPDATED'
        | 'OBSERVATION_BOOK'
        | 'UNIT_OR_CELL_MOVE'
        | 'CSRA_OR_RSRA_REVIEW'
        | 'SERVICE_REFERRAL'
        | 'SIM_REFERRAL'
      )[]
    }
    /** @description The request body to create a contributory factor to the incident that motivated the CSIP referral */
    CreateContributoryFactorRequest: {
      /** @description The type of contributory factor to the incident or motivation for CSIP referral. */
      factorTypeCode: string
      /** @description Additional information about the contributory factor to the incident or motivation for CSIP referral. */
      comment?: string
    }
    /** @description The request body for creating a new CSIP Record for a person */
    CreateCsipRecordRequest: {
      /** @description User entered identifier for the CSIP record. Defaults to the prison code. */
      logCode?: string
      /** @description The referral that results in the creation of this CSIP record. */
      referral: components['schemas']['CreateReferralRequest']
    }
    /** @description The request body for creating a CSIP referral */
    CreateReferralRequest: {
      /**
       * Format: date
       * @description The date the incident that motivated the CSIP referral occurred
       * @example 2021-09-27
       */
      incidentDate: string
      /**
       * @description The time the incident that motivated the CSIP referral occurred
       * @example 14:19:25
       */
      incidentTime?: string
      /** @description The type of incident that motivated the CSIP referral. */
      incidentTypeCode: string
      /** @description The location of incident that motivated the CSIP referral. */
      incidentLocationCode: string
      /** @description The person reporting the incident or creating the CSIP referral. */
      referredBy: string
      /** @description The area of work of the person reporting the incident or creating the CSIP referral. */
      refererAreaCode: string
      /** @description Was this referral proactive or preventative. */
      isProactiveReferral?: boolean
      /** @description Were any members of staff assaulted in the incident. */
      isStaffAssaulted?: boolean
      /** @description Name or names of assaulted members of staff if any. */
      assaultedStaffName?: string
      /** @description The type of involvement the person had in the incident */
      incidentInvolvementCode?: string
      /** @description The reasons why there is cause for concern. */
      descriptionOfConcern?: string
      /** @description The reasons already known about the causes of the incident or motivation for CSIP referral. */
      knownReasons?: string
      /** @description Any other information about the incident or reasons for CSIP referral. */
      otherInformation?: string
      /**
       * @description Records whether the safer custody team been informed.
       * @enum {string}
       */
      isSaferCustodyTeamInformed: 'YES' | 'NO' | 'DO_NOT_KNOW'
      /** @description Is the referral complete. */
      isReferralComplete?: boolean
      /** @description Contributory factors to the incident that motivated the referral. */
      contributoryFactors: components['schemas']['CreateContributoryFactorRequest'][]
    }
    /** @description The request body to create an interview */
    CreateInterviewRequest: {
      /** @description Name of the person being interviewed. */
      interviewee: string
      /**
       * Format: date
       * @description The date the interview took place.
       * @example 2021-09-27
       */
      interviewDate: string
      /** @description What role the interviewee played in the incident or referral. */
      intervieweeRoleCode: string
      /** @description Information provided in interview. */
      interviewText?: string
    }
    /** @description The request body to create an investigation on the incident that motivated the CSIP referral. */
    CreateInvestigationRequest: {
      /** @description The names of the staff involved in the investigation. */
      staffInvolved?: string
      /** @description Any evidence that was secured as part of the investigation. */
      evidenceSecured?: string
      /** @description The reasons why the incident occurred. */
      occurrenceReason?: string
      /** @description The normal behaviour of the person in prison. */
      personsUsualBehaviour?: string
      /** @description What triggers the person in prison has that could have motivated the incident. */
      personsTrigger?: string
      /** @description Any protective factors to reduce the person's risk factors and prevent triggers for instance of violence */
      protectiveFactors?: string
      recordedBy?: string
      recordedByDisplayName?: string
      /** @description The interviews in relation to the investigation */
      interviews: components['schemas']['CreateInterviewRequest'][]
    }
    /** @description The request body to create an Identified Need in a CSIP Plan */
    CreateIdentifiedNeedRequest: {
      /** @description Details of the need identified in the CSIP plan. */
      identifiedNeed: string
      /** @description The name of the person who is responsible for taking action on the intervention. */
      responsiblePerson: string
      /**
       * Format: date
       * @description The date the need was identified.
       * @example 2021-09-27
       */
      createdDate: string
      /**
       * Format: date
       * @description The target date the need should be progressed or resolved.
       * @example 2021-09-27
       */
      targetDate: string
      /**
       * Format: date
       * @description The date the identified need was resolved or closed.
       * @example 2021-09-27
       */
      closedDate?: string
      /** @description The planned intervention for the identified need. */
      intervention: string
      /** @description How the plan to address the identified need is progressing. */
      progression?: string
    }
    /** @description The request for creating a CSIP Plan for a CSIP record */
    CreatePlanRequest: {
      /** @description The case manager assigned to the CSIP plan. */
      caseManager: string
      /** @description The reasons motivating the creation of a CSIP plan. */
      reasonForPlan: string
      /**
       * Format: date
       * @description The next date the CSIP plan should be reviewed.
       * @example 2021-09-27
       */
      nextCaseReviewDate: string
      /** @description The needs identified in the CSIP plan. */
      identifiedNeeds: components['schemas']['CreateIdentifiedNeedRequest'][]
    }
    /** @description The request body to create a Attendee/Contributor to the review of a CSIP Plan */
    CreateAttendeeRequest: {
      /** @description Name of review attendee/contributor. */
      name?: string
      /** @description Role of review attendee/contributor. */
      role?: string
      /** @description If the person attended the review. */
      isAttended?: boolean
      /** @description Description of attendee contribution. */
      contribution?: string
    }
    /** @description The request body to create a Review for a CSIP Plan */
    CreateReviewRequest: {
      /**
       * Format: date
       * @description The date of the review.
       * @example 2021-09-27
       */
      reviewDate: string
      /** @description The username of the person who recorded the review. */
      recordedBy: string
      /** @description The displayable name of the person who recorded the review. */
      recordedByDisplayName: string
      /**
       * Format: date
       * @description The date of the next review.
       * @example 2021-09-27
       */
      nextReviewDate?: string
      /**
       * Format: date
       * @description The date the CSIP plan was closed following a review outcome decision to close it.
       */
      csipClosedDate?: string
      /** @description Additional information about the review. */
      summary?: string
      /** @description A list of actions following the review. */
      actions: ('RESPONSIBLE_PEOPLE_INFORMED' | 'CSIP_UPDATED' | 'REMAIN_ON_CSIP' | 'CASE_NOTE' | 'CLOSE_CSIP')[]
      /** @description The attendees/contributors to the review. */
      attendees: components['schemas']['CreateAttendeeRequest'][]
    }
    /** @description The request body for updating a CSIP Record */
    UpdateCsipRecordRequest: {
      /** @description User entered identifier for the CSIP record. Defaults to the prison code. */
      logCode?: string
      /** @description The referral that results in the creation of this CSIP record. */
      referral?: components['schemas']['UpdateReferralRequest']
    }
    /** @description The detail for updating a CSIP referral */
    UpdateReferralRequest: {
      /**
       * Format: date
       * @description The date the incident that motivated the CSIP referral occurred
       * @example 2021-09-27
       */
      incidentDate: string
      /**
       * @description The time the incident that motivated the CSIP referral occurred
       * @example 14:19:25
       */
      incidentTime?: string
      /** @description The type of incident that motivated the CSIP referral. */
      incidentTypeCode: string
      /** @description The location of incident that motivated the CSIP referral. */
      incidentLocationCode: string
      /** @description The person reporting the incident or creating the CSIP referral. */
      referredBy: string
      /** @description The area of work of the person reporting the incident or creating the CSIP referral. */
      refererAreaCode: string
      /** @description Was this referral proactive or preventative. */
      isProactiveReferral?: boolean
      /** @description Were any members of staff assaulted in the incident. */
      isStaffAssaulted?: boolean
      /** @description Name or names of assaulted members of staff if any. */
      assaultedStaffName?: string
      /** @description The type of involvement the person had in the incident */
      incidentInvolvementCode?: string
      /** @description The reasons why there is cause for concern. */
      descriptionOfConcern?: string
      /** @description The reasons already known about the causes of the incident or motivation for CSIP referral. */
      knownReasons?: string
      /** @description Any other information about the incident or reasons for CSIP referral. */
      otherInformation?: string
      /**
       * @description Records whether the safer custody team been informed.
       * @enum {string}
       */
      isSaferCustodyTeamInformed: 'YES' | 'NO' | 'DO_NOT_KNOW'
      /** @description Is the referral complete. */
      isReferralComplete?: boolean
    }
    /** @description The request body to update an investigation on the incident that motivated the CSIP referral. */
    UpdateInvestigationRequest: {
      /** @description The names of the staff involved in the investigation. */
      staffInvolved?: string
      /** @description Any evidence that was secured as part of the investigation. */
      evidenceSecured?: string
      /** @description The reasons why the incident occurred. */
      occurrenceReason?: string
      /** @description The normal behaviour of the person in prison. */
      personsUsualBehaviour?: string
      /** @description What triggers the person in prison has that could have motivated the incident. */
      personsTrigger?: string
      /** @description Any protective factors to reduce the person's risk factors and prevent triggers for instance of violence */
      protectiveFactors?: string
    }
    /** @description The request for updating a CSIP Plan for a CSIP record */
    UpdatePlanRequest: {
      /** @description The case manager assigned to the CSIP plan. */
      caseManager?: string
      /** @description The reasons motivating the creation of a CSIP plan. */
      reasonForPlan?: string
      /**
       * Format: date
       * @description The next date the CSIP plan should be reviewed.
       * @example 2021-09-27
       */
      nextCaseReviewDate?: string
    }
    /** @description The request body to update an interview */
    UpdateInterviewRequest: {
      /** @description Name of the person being interviewed. */
      interviewee: string
      /**
       * Format: date
       * @description The date the interview took place.
       * @example 2021-09-27
       */
      interviewDate: string
      /** @description What role the interviewee played in the incident or referral. */
      intervieweeRoleCode: string
      /** @description Information provided in interview. */
      interviewText?: string
    }
    /** @description The request body to update a contributory factor to the incident that motivated the CSIP referral */
    UpdateContributoryFactorRequest: {
      /** @description The type of contributory factor to the incident or motivation for CSIP referral. */
      factorTypeCode: string
      /** @description Additional information about the contributory factor to the incident or motivation for CSIP referral. */
      comment?: string
    }
    /** @description The request body to update a Review for a CSIP Plan */
    UpdateReviewRequest: {
      /**
       * Format: date
       * @description The date of the review.
       * @example 2021-09-27
       */
      reviewDate: string
      /** @description The username of the person who recorded the review. */
      recordedBy: string
      /** @description The displayable name of the person who recorded the review. */
      recordedByDisplayName: string
      /**
       * Format: date
       * @description The date of the next review.
       * @example 2021-09-27
       */
      nextReviewDate?: string
      /**
       * Format: date
       * @description The date the CSIP plan was closed following a review outcome decision to close it.
       */
      csipClosedDate?: string
      /** @description Additional information about the review. */
      summary?: string
      /** @description A list of actions following the review. */
      actions: ('RESPONSIBLE_PEOPLE_INFORMED' | 'CSIP_UPDATED' | 'REMAIN_ON_CSIP' | 'CASE_NOTE' | 'CLOSE_CSIP')[]
    }
    /** @description The request body to update a Attendee/Contributor to the review of a CSIP Plan */
    UpdateAttendeeRequest: {
      /** @description Name of review attendee/contributor. */
      name?: string
      /** @description Role of review attendee/contributor. */
      role?: string
      /** @description If the person attended the review. */
      isAttended?: boolean
      /** @description Description of attendee contribution. */
      contribution?: string
    }
    /** @description The request body to update an Identified Need in a CSIP Plan */
    UpdateIdentifiedNeedRequest: {
      /** @description Details of the need identified in the CSIP plan. */
      identifiedNeed: string
      /** @description The name of the person who is responsible for taking action on the intervention. */
      responsiblePerson: string
      /**
       * Format: date
       * @description The date the need was identified.
       * @example 2021-09-27
       */
      createdDate: string
      /**
       * Format: date
       * @description The target date the need should be progressed or resolved.
       * @example 2021-09-27
       */
      targetDate: string
      /**
       * Format: date
       * @description The date the identified need was resolved or closed.
       * @example 2021-09-27
       */
      closedDate?: string
      /** @description The planned intervention for the identified need. */
      intervention: string
      /** @description How the plan to address the identified need is progressing. */
      progression?: string
    }
    FindCsipRequest: {
      prisonCode: string[]
      query?: string
      status: (
        | 'CSIP_CLOSED'
        | 'CSIP_OPEN'
        | 'AWAITING_DECISION'
        | 'ACCT_SUPPORT'
        | 'PLAN_PENDING'
        | 'INVESTIGATION_PENDING'
        | 'NO_FURTHER_ACTION'
        | 'SUPPORT_OUTSIDE_CSIP'
        | 'REFERRAL_SUBMITTED'
        | 'REFERRAL_PENDING'
        | 'UNKNOWN'
      )[]
      includeRestrictedPatients: boolean
      /** Format: int32 */
      page: number
      /** Format: int32 */
      size: number
      sort: string
    }
    CsipSearchResult: {
      /** Format: uuid */
      id: string
      logCode?: string
      prisoner: components['schemas']['Prisoner']
      /** Format: date */
      referralDate: string
      incidentType: string
      /** Format: date */
      nextReviewDate?: string
      caseManager?: string
      status: components['schemas']['ReferenceData']
    }
    CsipSearchResults: {
      content: components['schemas']['CsipSearchResult'][]
      metadata: components['schemas']['PageMeta']
    }
    PageMeta: {
      /** Format: int64 */
      totalElements: number
    }
    Prisoner: {
      prisonNumber: string
      firstName: string
      lastName: string
      location?: string
    }
    CsipCounts: {
      /** Format: int64 */
      submittedReferrals: number
      /** Format: int64 */
      pendingInvestigations: number
      /** Format: int64 */
      awaitingDecisions: number
      /** Format: int64 */
      pendingPlans: number
      /** Format: int64 */
      open: number
      /** Format: int64 */
      overdueReviews: number
    }
    CsipOverview: {
      counts: components['schemas']['CsipCounts']
    }
    CurrentCsip: {
      status: components['schemas']['ReferenceData']
      /** Format: date */
      referralDate?: string
      /** Format: date */
      nextReviewDate?: string
      /** Format: date */
      closedDate?: string
      /** Format: int64 */
      reviewOverdueDays?: number
    }
    CurrentCsipDetail: {
      currentCsip?: components['schemas']['CurrentCsip']
      /** Format: int32 */
      totalOpenedCsipCount: number
      /** Format: int32 */
      totalReferralCount: number
    }
    DefaultLegacyActioned: {
      /** Format: date-time */
      actionedAt: string
      actionedBy?: string
      activeCaseloadId?: string
    }
  }
  responses: never
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}
export type $defs = Record<string, never>
export interface operations {
  syncCsipRecord: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['SyncCsipRequest']
      }
    }
    responses: {
      /** @description CSIP record merged */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['SyncResponse']
        }
      }
      /** @description Bad request */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  moveCsipRecord: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['MoveCsipRequest']
      }
    }
    responses: {
      /** @description CSIP record moved */
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Bad request */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  mergeReferral: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description CSIP record unique identifier */
        recordUuid: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['MergeReferralRequest']
      }
    }
    responses: {
      /** @description Referral updated and contributory factors merged */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['CsipRecord']
        }
      }
      /** @description Bad request */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The CSIP referral associated with this identifier was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  upsertScreeningOutcome: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description CSIP record unique identifier */
        recordUuid: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['UpsertSaferCustodyScreeningOutcomeRequest']
      }
    }
    responses: {
      /** @description Safer Custody Screening Outcome updated on the CSIP referral */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['SaferCustodyScreeningOutcome']
        }
      }
      /** @description Safer Custody Screening Outcome created on the CSIP referral */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['SaferCustodyScreeningOutcome']
        }
      }
      /** @description Bad request */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The CSIP referral associated with this identifier was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  upsertDecision: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description CSIP record unique identifier */
        recordUuid: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['UpsertDecisionAndActionsRequest']
      }
    }
    responses: {
      /** @description Decision and actions updated for CSIP referral */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['DecisionAndActions']
        }
      }
      /** @description Decision and actions added to CSIP referral */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['DecisionAndActions']
        }
      }
      /** @description Bad request */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The CSIP referral associated with this identifier was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The CSIP referral associated with this identifier already has a decision and actions */
      409: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  createCsipRecord: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Prison Number of the prisoner */
        prisonNumber: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateCsipRecordRequest']
      }
    }
    responses: {
      /** @description CSIP record created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['CsipRecord']
        }
      }
      /** @description Bad request */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  createInvestigation: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description CSIP record unique identifier */
        recordUuid: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateInvestigationRequest']
      }
    }
    responses: {
      /** @description Investigation and interviews added to CSIP referral */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Investigation']
        }
      }
      /** @description Bad request */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The CSIP referral associated with this identifier was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Conflict. The CSIP referral already has an Investigation created. */
      409: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  updateInvestigation: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description CSIP record unique identifier */
        recordUuid: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['UpdateInvestigationRequest']
      }
    }
    responses: {
      /** @description Investigation updated and/or interviews added to CSIP referral */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Investigation']
        }
      }
      /** @description Investigation and interviews added to CSIP referral */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Investigation']
        }
      }
      /** @description Bad request */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The CSIP referral associated with this identifier was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Conflict. The CSIP referral already has an Investigation created. */
      409: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  createInterview: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description CSIP record unique identifier */
        recordUuid: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateInterviewRequest']
      }
    }
    responses: {
      /** @description Interview added to CSIP referral */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Interview']
        }
      }
      /** @description Bad request */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The CSIP referral associated with this identifier was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  createContributoryFactor: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description CSIP record unique identifier */
        recordUuid: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateContributoryFactorRequest']
      }
    }
    responses: {
      /** @description New contributory factor added to CSIP referral */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ContributoryFactor']
        }
      }
      /** @description Bad request */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The CSIP referral associated with this identifier was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  createPlan: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description CSIP record unique identifier */
        recordUuid: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreatePlanRequest']
      }
    }
    responses: {
      /** @description CSIP plan created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Plan']
        }
      }
      /** @description Bad request */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The CSIP referral associated with this identifier was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  updatePlan: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description CSIP record unique identifier */
        recordUuid: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['UpdatePlanRequest']
      }
    }
    responses: {
      /** @description CSIP plan updated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Plan']
        }
      }
      /** @description CSIP plan created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Plan']
        }
      }
      /** @description Bad request */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The CSIP referral associated with this identifier was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  createReview: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description CSIP record unique identifier */
        recordUuid: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateReviewRequest']
      }
    }
    responses: {
      /** @description Reviews and attendees added to CSIP plan */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Review']
        }
      }
      /** @description Bad request */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The CSIP plan associated with this identifier was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  createIdentifiedNeed: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description CSIP record unique identifier */
        recordUuid: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateIdentifiedNeedRequest']
      }
    }
    responses: {
      /** @description Identified need added to CSIP plan */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['IdentifiedNeed']
        }
      }
      /** @description Bad request */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The CSIP plan associated with this identifier was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  createAttendee: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Review unique identifier */
        reviewUuid: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateAttendeeRequest']
      }
    }
    responses: {
      /** @description Attendee added to review */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Attendee']
        }
      }
      /** @description Bad request */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The review associated with this identifier was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  retrieveCsipRecord: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description CSIP record unique identifier */
        recordUuid: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description CSIP record found */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['CsipRecord']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The CSIP record associated with this identifier was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  deleteCsipRecord: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description CSIP record unique identifier */
        recordUuid: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description CSIP previously deleted or never existed */
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description CSIP record deleted */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Bad request */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  updateCsipRecord: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description CSIP record unique identifier */
        recordUuid: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['UpdateCsipRecordRequest']
      }
    }
    responses: {
      /** @description CSIP record updated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['CsipRecord']
        }
      }
      /** @description Bad request */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The CSIP record associated with this identifier was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  updateInterview: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Interview unique identifier */
        interviewUuid: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['UpdateInterviewRequest']
      }
    }
    responses: {
      /** @description Interview updated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Interview']
        }
      }
      /** @description Bad request */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The interview associated with this identifier was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  updateContributoryFactor: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Contributory Factor unique identifier */
        contributoryFactorUuid: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['UpdateContributoryFactorRequest']
      }
    }
    responses: {
      /** @description Contributory factor updated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ContributoryFactor']
        }
      }
      /** @description Bad request */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The contributory factor associated with this identifier was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  updateReview: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Review unique identifier */
        reviewUuid: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['UpdateReviewRequest']
      }
    }
    responses: {
      /** @description Review updated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Review']
        }
      }
      /** @description Bad request */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The review associated with this identifier was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  updateAttendee: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Attendee unique identifier */
        attendeeUuid: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['UpdateAttendeeRequest']
      }
    }
    responses: {
      /** @description Attendee updated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Attendee']
        }
      }
      /** @description Bad request */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The attendee associated with this identifier was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  updateIdentifiedNeed: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Identified Need unique identifier */
        identifiedNeedUuid: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['UpdateIdentifiedNeedRequest']
      }
    }
    responses: {
      /** @description Identified Need updated */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['IdentifiedNeed']
        }
      }
      /** @description Bad request */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The identified need associated with this identifier was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getCsipRecordsByPrisonNumbers: {
    parameters: {
      query?: never
      header?: never
      path: {
        prisonNumber: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful request - returns an empty list if no csip records are found */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['CsipRecord'][]
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  findCsipRecords: {
    parameters: {
      query: {
        request: components['schemas']['FindCsipRequest']
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description CSIP records found */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['CsipSearchResults']
        }
      }
      /** @description Bad Request */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getReferenceData: {
    parameters: {
      query?: {
        /** @description Include inactive reference data. Defaults to false */
        includeInactive?: boolean
      }
      header?: never
      path: {
        /** @description Reference data domain. */
        domain:
          | 'area-of-work'
          | 'contributory-factor-type'
          | 'decision-outcome-type'
          | 'role'
          | 'incident-involvement'
          | 'incident-location'
          | 'incident-type'
          | 'interviewee-role'
          | 'screening-outcome-type'
          | 'status'
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Reference data found */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ReferenceData'][]
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description The reference data associated with this domain was not found. */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getCsipOverview: {
    parameters: {
      query?: never
      header?: never
      path: {
        prisonCode: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Successful request returning CSIP overview */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['CsipOverview']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getCurrentCsipRecord: {
    parameters: {
      query?: never
      header?: never
      path: {
        prisonNumber: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description CSIP records found */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['CurrentCsipDetail']
        }
      }
      /** @description Bad Request */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  deleteRecord: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['DefaultLegacyActioned']
      }
    }
    responses: {
      /** @description CSIP record merged */
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description No Content */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
}
